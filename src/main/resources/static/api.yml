openapi: 3.0.1
info:
  title: Accredited Programmes API
  version: 1.0.0
servers:
  - url: /
security:
  - bearerAuth: [ ]
paths:
  /subject-access-request:
    get:
      operationId: subjectAccessRequestGet
      summary: API call to retrieve SAR information about a person
      tags:
        - Subject Access Request
      description: |
        Either NOMIS Prison Number (PRN) must be provided as part of the request.
        * If the product uses the identifier type transmitted in the request, it can respond with its data and HTTP code 200.
        * If the product uses the identifier type transmitted in the request but has no data to respond with, it should respond with HTTP code 204
        * If the product does not use the identifier type transmitted in the request, it should respond with HTTP code 209.
      parameters:
        - name: prn
          in: query
          description: prison number
          required: false
          schema:
            type: string
        - name: fromDate
          in: query
          description: from date
          schema:
            type: string
            format: date
        - name: toDate
          in: query
          description: to date
          schema:
            type: string
            format: date
      responses:
        '200':
          description: the sar content
          content:
            application/json:
              schema:
                type: object
        '204':
          description: Request successfully processed - no content found
        '209':
          description: Subject Identifier is not recognised by this service


  /people/{prisonNumber}/sentences:
    get:
      tags:
        - Person
      summary: Sentence details
      operationId: getSentenceDetails
      parameters:
        - name: prisonNumber
          in: path
          description: prison number
          example: "A1234AA"
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/SentenceDetails'
        404:
          description: Person not found
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /prisoner-search:
    post:
      tags:
        - Person
      deprecated: true
      summary: (Deprecated - use /people/search instead) Search for a prisoner via prison search api by prisoner id and caseload.
      operationId: searchPrisoner
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/PrisonerSearchRequest'
      responses:
        201:
          description: The prisoner search results.
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PrisonerSearchResponse'
        400:
          description: Bad input
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: The client is not authorized to perform this operation.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /people/search:
    post:
      tags:
        - Person
      summary: Search for a prisoner via prison search api by prisoner id and caseload.
      operationId: searchPeople
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/PeopleSearchRequest'
      responses:
        201:
          description: The prisoner search results.
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PeopleSearchResponse'
        400:
          description: Bad input
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: The client is not authorized to perform this operation.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /prison-search:
    post:
      tags:
        - Prison
      summary: Search for prisons via prison register api by prison id.
      operationId: getPrisons
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/PrisonSearchRequest'
      responses:
        201:
          description: The prisoner search results.
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PrisonSearchResponse'
        400:
          description: Bad input
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: The client is not authorized to perform this operation.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'


  /prison-search/{prisonId}:
    get:
      tags:
        - Prison
      summary: Details for a single prison
      operationId: getPrisonById
      parameters:
        - name: prisonId
          in: path
          description: A prison identifier
          required: true
          schema:
            type: string
            pattern: '^[A-Z]{3,6}$'
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PrisonSearchResponse'
        400:
          description: Bad input
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: The client is not authorized to perform this operation.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /courses:
    get:
      tags:
        - Courses
      summary: List all courses
      operationId: getAllCourses
      responses:
        200:
          description: Return a JSON representation of all courses that are not withdrawn.
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'

  /courses/csv:
    put:
      tags:
        - Courses
      summary: Upload a CSV format file containing a full set of Courses data.
      operationId: updateCourses
      requestBody:
        required: true
        content:
          'text/csv;charset=UTF-8':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CourseRecord'
      responses:
        204:
          description: Successful update
        400:
          description: Bad input
    get:
      tags:
        - Courses
      summary: List all courses
      operationId: getCoursesCsv
      responses:
        200:
          description: Return a CSV format representation of all courses that are not withdrawn. The data is compatible with the PUT /courses endpoint and may be round-tripped.
          content:
            'text/csv;charset=UTF-8':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CourseRecord'

  /courses/course-names:
    get:
      tags:
        - Courses
      summary: Get all unique course names
      operationId: getAllCourseNames
      parameters:
        - name: includeWithdrawn
          in: query
          description: flag to include withdrawn
          required: false
          schema:
            type: boolean
      responses:
        200:
          description: Return a JSON representation of all unique course names that are not withdrawn.
          content:
            'application/json':
              schema:
                type: array
                items:
                  type: string

  /courses/prerequisites/csv:
    put:
      tags:
        - Course Prerequisites
      summary: Upload a CSV format file containing a full set of prerequisites data for the current set of courses.
      operationId: updatePrerequisites
      description: >
        Accepts a CSV format file of data representing the desired state of all prerequisite data attached to the current set of courses.
        <p>Pre-existing prerequisite data will be removed before the new data is applied.
        <p>The first row of CSV data is treated as a header row.  The column headings in the header row must much the names of the fields in the PrerequisiteRecord schema. Column order is not important.
      requestBody:
        required: true
        content:
          'text/csv;charset=UTF-8':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/PrerequisiteRecord'
      responses:
        200:
          description: Successful update
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LineMessage'
        400:
          description: Bad input
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Course Prerequisites
      summary: Download a CSV format representation of the current set of prerequisites.
      operationId: getPrerequisitesCsv
      responses:
        200:
          description: The CSV formatted data is compatible with the PUT operation and may be round-tripped.
          content:
            'text/csv;charset=UTF-8':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PrerequisiteRecord'

  /courses/{id}:
    get:
      tags:
        - Courses
      summary: Details for a single course
      operationId: getCourseById
      parameters:
        - name: id
          in: path
          description: A course identifier
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Course'

  /courses/{id}/offerings:
    get:
      tags:
        - Course Offerings
      summary: List all offerings for a course
      operationId: getAllOfferingsByCourseId
      parameters:
        - name: id
          in: path
          description: A course identifier
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CourseOffering'

  /organisations/{organisationId}/courses:
    get:
      tags:
        - Course Offerings
      summary: List all courses for an organisationId
      operationId: getAllCoursesByOrganisationId
      parameters:
        - name: organisationId
          in: path
          description: A organisation identifier
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'

  /offerings/csv:
    put:
      tags:
        - Course Offerings
      summary: Upload all offerings in CSV format.
      operationId: updateOfferings
      description: >
        Accepts a CSV format file of data representing the desired state of all offerings data attached to the current set of courses.
        <p>Pre-existing offering data will be removed before the new data is applied.
        <p>The first row of CSV data is treated as a header row.  The column headings in the header row must much the names of the fields in the OfferingRecord schema. Column order is not important.
      requestBody:
        required: true
        content:
          'text/csv;charset=UTF-8':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OfferingRecord'
      responses:
        204:
          description: Successful update
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LineMessage'
        400:
          description: Bad input
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Course Offerings
      summary: Download all Offerings in CSV format
      operationId: getOfferingsCsv
      responses:
        200:
          description: successful operation
          content:
            'text/csv;charset=UTF-8':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OfferingRecord'

  /offerings/{id}:
    get:
      tags:
        - Course Offerings
      summary: Details for a single course offering
      operationId: getOfferingById
      parameters:
        - name: id
          in: path
          description: A course offering identifier
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CourseOffering'
        401:
          description: Unauthorised. The request was unauthorised.
        403:
          description: Forbidden.  The client is not authorised to access this offering.
        404:
          description: Invalid course offering id
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /referrals:
    post:
      tags:
        - Referrals
      summary: Start a referral
      operationId: createReferral
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/ReferralCreate'
      responses:
        201:
          description: Started referral
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ReferralCreated'
        400:
          description: Bad input
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorised. The request was unauthorised.

    get:
      summary: Retrieve some referrals
      operationId: getReferrals
      tags:
        - Referrals
      parameters:
        - name: status
          in: query
          description: If present, only return referrals in the given state
          required: false
          schema:
            type: string
        - name: offeringId
          in: query
          description: The id (UUID) of an active offering. If present, only return referrals for that offering.
          required: false
          schema:
            type: string
            format: uuid
        - name: prisonNumber
          in: query
          description: The prison number of the person who is being referred. If present, only return referrals for the person.
          example: "A1234AA"
          required: false
          schema:
            type: string
      responses:
        200:
          description: Returns information about matching referrals
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Referral'
        401:
          description: The request was unauthorised
        403:
          description: Forbidden.  The client is not authorised to access referrals.

  /referrals/{id}:
    get:
      tags:
        - Referrals
      summary: Retrieve a referral
      operationId: getReferralById
      parameters:
        - name: id
          in: path
          description: The id (UUID) of a referral
          required: true
          schema:
            type: string
            format: uuid
        - name: updatePerson
          in: query
          description: parameter to decide whether to update the local person data
          required: false
          schema:
            type: boolean
            default: false
      responses:
        200:
          description: Information about the referral
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Referral'
        401:
          description: The request was unauthorised
        403:
          description: Forbidden.  The client is not authorised to access this referral.
        404:
          description: The referral does not exist

    put:
      tags:
        - Referrals
      summary: Update a referral
      operationId: updateReferralById
      parameters:
        - name: id
          in: path
          description: The id (UUID) of a referral
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: "#/components/schemas/ReferralUpdate"
      responses:
        204:
          description: The referral was updated
        401:
          description: The request was unauthorised
        403:
          description: Forbidden.  The client is not authorised to access this referral.
        404:
          description: The referral does not exist

    delete:
      summary: Delete a draft referral
      description: Deletes a draft referral by its ID.
      operationId: deleteReferralById
      tags:
        - Referrals
      parameters:
        - name: id
          in: path
          description: The id (UUID) of a referral
          required: true
          schema:
            type: string
            format: uuid
      responses:
        204:
          description: No Content - The referral was successfully deleted
        401:
          description: The request was unauthorised
        403:
          description: Not authorised to access this endpoint/these referrals
        404:
          description: No referrals for supplied organisationId (Not Found).

  /referrals/{id}/status-transitions:
    get:
      tags:
        - Referrals
      summary: Retrieve the next available status transitions for a referral
      operationId: getNextStatusTransitions
      parameters:
        - name: id
          in: path
          description: The id (UUID) of a referral
          required: true
          schema:
            type: string
            format: uuid
        - name: ptUser
          in: query
          description: is the user a Programme Team user
          required: false
          schema:
            type: boolean
            default: false
        - name: deselectAndKeepOpen
          in: query
          description: flag for bespoke deselection option
          required: false
          schema:
            type: boolean
            default: false
      responses:
        200:
          description: The list of statuses a referral can move on to
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReferralStatusRefData'
        401:
          description: The request was unauthorised
        403:
          description: Forbidden.  The client is not authorised to access this referral.
        404:
          description: The referral does not exist

  /referrals/{id}/confirmation-text/{chosenStatusCode}:
    get:
      tags:
        - Referrals
      summary: Endpoint to present the UI with the appropriate text for the status change chosen.
      operationId: getConfirmationText
      parameters:
        - name: id
          in: path
          description: The id (UUID) of a referral
          required: true
          schema:
            type: string
            format: uuid
        - name: chosenStatusCode
          in: path
          description: The status code that was chosen
          required: true
          schema:
            type: string
        - name: ptUser
          in: query
          description: is the user a Programme Team user
          required: false
          schema:
            type: boolean
            default: false
        - name: deselectAndKeepOpen
          in: query
          description: flag for bespoke deselection option
          required: false
          schema:
            type: boolean
            default: false
      responses:
        200:
          description: The screen fields for the confirmation page
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ConfirmationFields'
        401:
          description: The request was unauthorised
        403:
          description: Forbidden.  The client is not authorised to access this referral.
        404:
          description: The referral does not exist

  /referrals/{id}/status:
    put:
      summary: Change a referral's status
      tags:
        - Referrals
      operationId: updateReferralStatusById
      parameters:
        - name: id
          in: path
          description: The id (UUID) of a referral
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/ReferralStatusUpdate'
      responses:
        204:
          description: The referral now has the requested status.
        401:
          description: The request was unauthorised.
        403:
          description: Forbidden.  The client is not authorised to access this referral.
        404:
          description: The referral does not exist.
        409:
          description: The referral may not change its status to the supplied value.

  /referrals/{id}/submit:
    post:
      summary: Submit a completed referral
      tags:
        - Referrals
      operationId: submitReferralById
      parameters:
        - name: id
          in: path
          description: The id (UUID) of a referral
          required: true
          schema:
            type: string
            format: uuid
      responses:
        204:
          description: Submitted a completed referral.
        401:
          description: The request was unauthorised.
        403:
          description: Forbidden. The client is not authorised to access this referral.
        404:
          description: The referral does not exist.

  /referrals/{id}/status-history:
    get:
      tags:
        - Referrals
      summary: Returns the referral status history for this referral
      operationId: statusHistory
      parameters:
        - name: id
          in: path
          description: The id (UUID) of a referral
          required: true
          schema:
            type: string
            format: uuid
        - name: updatePerson
          in: query
          description: parameter to decide whether to update the local person data
          required: false
          schema:
            type: boolean
            default: false
      responses:
        201:
          description: A list of status history
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReferralStatusHistory'
        400:
          description: Bad input
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: The client is not authorized to perform this operation.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /referrals/view/organisation/{organisationId}/dashboard:
    get:
      summary: Get paginated referrals by organisationId
      tags:
        - Referrals
      operationId: getReferralViewsByOrganisationId
      parameters:
        - name: organisationId
          in: path
          description: The organisationId of an organisation
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Page number of the requested page
          required: false
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            default: 10
        - name: status
          in: query
          description: Filter by the status of the referral
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: audience
          in: query
          description: Filter by the audience of the referral
          required: false
          schema:
            type: string
        - name: courseName
          in: query
          description: Filter by the name of the course associated with this referral
          required: false
          schema:
            type: string
        - name: statusGroup
          in: query
          description: Additional filter to only show "open", "closed" or "draft" referrals
          required: false
          schema:
            type: string
        - name: sortColumn
          in: query
          description: Column to sort by default "surname"
          required: false
          schema:
            type: string
        - name: sortDirection
          in: query
          description: Direction to sort by [ascending/descending] default "ascending"
          required: false
          schema:
            type: string
      responses:
        200:
          description: Paginated summary of referrals for an organisation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PaginatedReferralView'
        401:
          description: The request was unauthorised
        403:
          description: Not authorised to access this endpoint/these referrals
        404:
          description: No referrals for supplied organisationId (Not Found).

  /referrals/view/me/dashboard:
    get:
      summary: Get paginated referrals for the current user
      tags:
        - Referrals
      operationId: getReferralViewsByCurrentUser
      parameters:
        - name: page
          in: query
          description: Page number of the requested page
          required: false
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            default: 10
        - name: status
          in: query
          description: Filter by the status of the referral
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: audience
          in: query
          description: Filter by the audience of the referral
          required: false
          schema:
            type: string
        - name: courseName
          in: query
          description: Filter by the name of the course associated with this referral
          required: false
          schema:
            type: string
        - name: statusGroup
          in: query
          description: Additional filter to only show "open", "closed" or "draft" referrals
          required: false
          schema:
            type: string
        - name: sortColumn
          in: query
          description: Column to sort by default "surname"
          required: false
          schema:
            type: string
        - name: sortDirection
          in: query
          description: Direction to sort by [ascending/descending] default "ascending"
          required: false
          schema:
            type: string
      responses:
        200:
          description: Paginated summary of referrals for an organisation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PaginatedReferralView'
        401:
          description: The request was unauthorised
        403:
          description: Not authorised to access this endpoint/these referrals
        404:
          description: No referrals for supplied organisationId (Not Found).

  /offerings/{id}/course:
    get:
      tags:
        - Courses
      summary: Retrieve the course that owns an offering.
      operationId: getCourseByOfferingId
      parameters:
        - name: id
          in: path
          description: The id (UUID) of an offering.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Information about the Course that owns the offering.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Course'
        401:
          description: The request was unauthorised
        403:
          description: Forbidden.  The client is not authorised to access this offering.
        404:
          description: No offering has the supplied id (Not Found).

  /course-participations:
    post:
      tags:
        - Course Participations
      summary: Record information about a person's prior participation in a course.
      operationId: createCourseParticipation
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/CourseParticipationCreate'
      responses:
        201:
          description: The course participation information has been added.
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/CourseParticipation"
        400:
          description: Bad input
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: The client is not authorized to perform this operation.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /course-participations/{id}:
    get:
      tags:
        - Course Participations
      summary: Return information about a person's participation in a course. Selected by a unique identifier.
      operationId: getCourseParticipationById
      parameters:
        - name: id
          in: path
          description: The unique identifier assigned to this record when it was created.
          schema:
            type: string
            format: uuid
          required: true
      responses:
        200:
          description: The selected course participation record.
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/CourseParticipation"
        401:
          description: The client is not authorised to perform this operation.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Course Participations
      summary: Update the information about a person's participation in a course.
      operationId: updateCourseParticipationById
      parameters:
        - name: id
          in: path
          description: The unique identifier assigned to this record when it was created.
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          'application/json':
            schema:
              $ref: "#/components/schemas/CourseParticipationUpdate"
        required: true
      responses:
        200:
          description: The information about a person's participation in a course has been updated.
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/CourseParticipation"
        401:
          description: The client is not authorized to perform this operation.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: There is no information for the id, so it cannot be updated.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Course Participations
      summary: Delete information about a person's participation in a course.
      operationId: deleteCourseParticipationById
      parameters:
        - name: id
          in: path
          description: The unique identifier assigned to this record when it was created.
          schema:
            type: string
            format: uuid
          required: true
      responses:
        204:
          description: The information about a person's participation in a course has been deleted.
        401:
          description: The client is not authorized to perform this operation.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /people/{prisonNumber}/course-participations:
    get:
      tags:
        - Course Participations
      summary: Retrieve course participation information for a person identified by their prison number.
      operationId: getCourseParticipationsByPrisonNumber
      parameters:
        - name: prisonNumber
          in: path
          description: The prison number of the person for whom the information should be retrieved.
          example: "A1234AA"
          required: true
          schema:
            type: string
      responses:
        200:
          description: All historic course participation information for the person.  Empty if none found.
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CourseParticipation"
        401:
          description: The client is not authorised to perform this operation.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /people/offences/{prisonNumber}:
    get:
      summary: Get details of an offence by prison number
      description: Retrieves details of an offence by its unique code.
      tags:
        - Person
      operationId: getOffences
      parameters:
        - name: prisonNumber
          in: path
          description: The prison number of the person for whom the information should be retrieved.
          example: "A1234AA"
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Offence'
                type: array
        401:
          description: Unauthorised. The request was unauthorised.
        403:
          description: Forbidden.  The client is not authorised to access person.
        404:
          description: Invalid prison number
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /oasys/{prisonNumber}/offence-details:
    get:
      tags:
        - Oasys Integration
      summary: Offence details as held by Oasys
      operationId: getOffenceDetails
      parameters:
        - name: prisonNumber
          in: path
          description: Prison nomis identifier
          example: "A1234AA"
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/OffenceDetail'
        401:
          description: Unauthorised. The request was unauthorised.
        403:
          description: Forbidden.  The client is not authorised to access person.
        404:
          description: Invalid prison number
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /oasys/{prisonNumber}/relationships:
    get:
      tags:
        - Oasys Integration
      summary: Relationships details as held by Oasys
      operationId: getRelationships
      parameters:
        - name: prisonNumber
          in: path
          description: Prison nomis identifier
          example: "A1234AA"
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Relationships'
        401:
          description: Unauthorised. The request was unauthorised.
        403:
          description: Forbidden.  The client is not authorised to access person.
        404:
          description: Invalid prison number
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /oasys/{prisonNumber}/rosh-analysis:
    get:
      tags:
        - Oasys Integration
      summary: ROSH analysis details as held by Oasys
      operationId: getRoshAnalysis
      parameters:
        - name: prisonNumber
          in: path
          description: Prison nomis identifier
          example: "A1234AA"
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/RoshAnalysis'
        401:
          description: Unauthorised. The request was unauthorised.
        403:
          description: Forbidden.  The client is not authorised to access person.
        404:
          description: Invalid prison number
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /oasys/{prisonNumber}/lifestyle:
    get:
      tags:
        - Oasys Integration
      summary: Lifestyle details as held by Oasys
      operationId: getLifestyle
      parameters:
        - name: prisonNumber
          in: path
          description: Prison nomis identifier
          example: "A1234AA"
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Lifestyle'
        401:
          description: Unauthorised. The request was unauthorised.
        403:
          description: Forbidden.  The client is not authorised to access person.
        404:
          description: Invalid prison number
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /oasys/{prisonNumber}/psychiatric:
    get:
      tags:
        - Oasys Integration
      summary: Psychiatric details as held by Oasys
      operationId: getPsychiatric
      parameters:
        - name: prisonNumber
          in: path
          description: Prison nomis identifier
          example: "A1234AA"
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Psychiatric'
        401:
          description: Unauthorised. The request was unauthorised.
        403:
          description: Forbidden.  The client is not authorised to access person.
        404:
          description: Invalid prison number
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /oasys/{prisonNumber}/behaviour:
    get:
      tags:
        - Oasys Integration
      summary: Behaviour details as held by Oasys
      operationId: getBehaviour
      parameters:
        - name: prisonNumber
          in: path
          description: Prison nomis identifier
          example: "A1234AA"
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Behaviour'
        401:
          description: Unauthorised. The request was unauthorised.
        403:
          description: Forbidden.  The client is not authorised to access person.
        404:
          description: Invalid prison number
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /oasys/{prisonNumber}/attitude:
    get:
      tags:
        - Oasys Integration
      summary: Attitude details as held by Oasys
      operationId: getAttitude
      parameters:
        - name: prisonNumber
          in: path
          description: Prison nomis identifier
          example: "A1234AA"
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Attitude'
        401:
          description: Unauthorised. The request was unauthorised.
        403:
          description: Forbidden.  The client is not authorised to access person.
        404:
          description: Invalid prison number
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /oasys/{prisonNumber}/health:
    get:
      tags:
        - Oasys Integration
      summary: Health details as held by Oasys
      operationId: getHealth
      parameters:
        - name: prisonNumber
          in: path
          description: Prison nomis identifier
          example: "A1234AA"
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Health'
        401:
          description: Unauthorised. The request was unauthorised.
        403:
          description: Forbidden.  The client is not authorised to access person.
        404:
          description: Invalid prison number
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /oasys/{prisonNumber}/learning-needs:
    get:
      tags:
        - Oasys Integration
      summary: Learning needs details as held by Oasys
      operationId: getLearningNeeds
      parameters:
        - name: prisonNumber
          in: path
          description: Prison nomis identifier
          example: "A1234AA"
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/LearningNeeds'
        401:
          description: Unauthorised. The request was unauthorised.
        403:
          description: Forbidden.  The client is not authorised to access person.
        404:
          description: Invalid prison number
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /oasys/{prisonNumber}/risks-and-alerts:
    get:
      tags:
        - Oasys Integration
      summary: Risks details as held by Oasys
      operationId: getRisks
      parameters:
        - name: prisonNumber
          in: path
          description: Prison nomis identifier
          example: "A1234AA"
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Risks'
        401:
          description: Unauthorised. The request was unauthorised.
        403:
          description: Forbidden.  The client is not authorised to access person.
        404:
          description: Invalid prison number
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /oasys/{prisonNumber}/drug-and-alcohol-details:
    get:
      summary: Get drug and alcohol assessment details
      description: Retrieves the drug and alcohol assessment details for a given prison number
      tags:
        - Oasys Integration
      operationId: getDrugAndAlcoholDetails
      parameters:
        - name: prisonNumber
          in: path
          description: Prison nomis identifier
          example: "A1234AA"
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/DrugAlcoholDetail'
        401:
          description: Unauthorised. The request was unauthorised.
        403:
          description: Forbidden.  The client is not authorised to access person.
        404:
          description: Invalid prison number
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'


  /reference-data/referral-statuses:
    get:
      tags:
        - reference data
      summary: The referral status reference data
      operationId: getReferralStatuses
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ReferralStatusRefData"
        401:
          description: Unauthorised. The request was unauthorised.
        403:
          description: Forbidden.  The client is not authorised to access.

  /reference-data/referral-statuses/{code}:
    get:
      tags:
        - reference data
      summary: referral status reference data
      operationId: getReferralStatus
      parameters:
        - name: code
          in: path
          description: referral status code
          example: "WITHDRAWN"
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ReferralStatusRefData'
        401:
          description: Unauthorised. The request was unauthorised.
        403:
          description: Forbidden.  The client is not authorised to access.
        404:
          description: Reference data not found
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /reference-data/referral-statuses/{referralStatusCode}/categories:
    get:
      tags:
        - reference data
      summary: The referral status categories reference data for a referral status code
      operationId: getReferralStatusCategories
      parameters:
        - name: referralStatusCode
          in: path
          description: referral status code
          example: "WITHDRAWN"
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ReferralStatusCategory"
        401:
          description: Unauthorised. The request was unauthorised.
        403:
          description: Forbidden.  The client is not authorised to access.

  /reference-data/referral-statuses/categories/{code}:
    get:
      tags:
        - reference data
      summary: get a single referral status category
      operationId: getReferralStatusCategory
      parameters:
        - name: code
          in: path
          description: category code
          example: "ADMIN"
          required: true
          schema:
            type: string

      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ReferralStatusCategory'
        401:
          description: Unauthorised. The request was unauthorised.
        403:
          description: Forbidden.  The client is not authorised to access.
        404:
          description: Reference data not found
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /reference-data/referral-statuses/{referralStatusCode}/categories/{categoryCode}/reasons:
    get:
      tags:
        - reference data
      summary: The referral status reasons reference data for a referral status code
      operationId: getReferralStatusReasons
      parameters:
        - name: referralStatusCode
          in: path
          description: referral status code
          example: "WITHDRAWN"
          required: true
          schema:
            type: string
        - name: categoryCode
          in: path
          description: referral category code
          example: "ADMIN"
          required: true
          schema:
            type: string
        - name: deselectAndKeepOpen
          in: query
          description: flag for bespoke deselection option
          required: false
          schema:
            type: boolean
            default: false

      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ReferralStatusReason"
        401:
          description: Unauthorised. The request was unauthorised.
        403:
          description: Forbidden.  The client is not authorised to access.

  /reference-data/referral-statuses/categories/reasons/{code}:
    get:
      tags:
        - reference data
      summary: get a single referral status reason
      operationId: getReferralStatusReason
      parameters:
        - name: code
          in: path
          description: reason code
          example: "DUPLICATE"
          required: true
          schema:
            type: string

      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ReferralStatusReason'
        401:
          description: Unauthorised. The request was unauthorised.
        403:
          description: Forbidden.  The client is not authorised to access.
        404:
          description: Reference data not found
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /organisations/enabled:
    get:
      tags:
        - reference data
      summary: Get list of enabled organisations
      operationId: getEnabledOrganisations
      responses:
        200:
          description: List of enabled organisations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnabledOrganisation'
        401:
          description: Unauthorised. The request was unauthorised.
        403:
          description: Forbidden.  The client is not authorised to access.

  /organisations:
    get:
      tags:
        - Organisation
      summary: Get all organisations
      description: Returns a list of organisations with their ID and name
      operationId: getOrganisations
      responses:
        '200':
          description: Successfully retrieved list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organisation'
        '401':
          description: You are not authorized to view the resource
        '403':
          description: Accessing the resource you were trying to reach is forbidden
        '404':
          description: The resource you were trying to reach is not found

  /user/me/caseload:
    get:
      summary: Get list of caseloads for current user
      operationId: getCurrentUserCaseloads
      parameters:
        - name: allCaseloads
          in: query
          description: Flag to indicate whether to retrieve all caseloads or not. Set to false by default
          schema:
            type: boolean
            default: false
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CaseLoad'
                type: array
          description: Retrieves the caseloads associated with the authenticated user.
        "401":
          description: Unauthorised. The request was unauthorised.
        "403":
          description: Forbidden.  The client is not authorised to access.
      tags:
        - User
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Course:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: Thinking skills programme
        description:
          type: string
          example: Thinking Skills Programme (TSP) description
        alternateName:
          type: string
          example: 'BNM+'
        displayName:
          type: string
          example: 'Becoming New Me Plus: general violence offence (BNM+)'
        coursePrerequisites:
          type: array
          items:
            $ref: '#/components/schemas/CoursePrerequisite'
        audience:
          type: string
          example: 'Gang offence'
        audienceColour:
          type: string
          example: 'purple'
      required:
        - id
        - name
        - coursePrerequisites
        - audience

    CourseRecord:
      title: 'CourseRecord'
      type: object
      properties:
        name:
          type: string
        alternateName:
          type: string
        identifier:
          type: string
        description:
          type: string
        audience:
          type: string
        audienceColour:
          type: string
          example: 'purple'
        comments:
          type: string
      required:
        - name
        - identifier
        - description
        - audience

    CoursePrerequisite:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
      example:
        - name: gender
          description: female
        - name: risk score
          description: 'ORGS: 50+'
        - name: offence type
          description: some offence here
      required:
        - name
        - description

    PrerequisiteRecord:
      type: object
      title: 'PrerequisiteRecord'
      properties:
        name:
          type: string
          example: "age"
          description: "The name of this Course Prerequisite."
        description:
          type: string
          example: "18+"
          description: "The value of this Course Prerequisite."
        course:
          type: string
          example: "Kaizen"
          description: "The name of the Course to which this Prerequisite applies. The name must match a course name exactly for this Prerequisite to be added to the Course."
        identifier:
          type: string
          example: "BNM-IPVO"
        comments:
          type: string
      required:
        - name
        - course
        - identifier

    CourseOffering:
      type: object
      properties:
        id:
          type: string
          format: uuid
        organisationId:
          type: string
          example: "MDI"
          description: "The unique identifier associated with the location hosting the offering. For prisons, this is the PrisonId, which is usually three capital letters."
        organisationEnabled:
          type: boolean
          description: "Describes if a referral can be created with an organisation"
        contactEmail:
          type: string
          format: email
          example: "ap-admin@digital.justice.gov.uk"
          description: "The email address of a contact for this offering"
        secondaryContactEmail:
          type: string
          format: email
          example: "ap-admin-2@digital.justice.gov.uk"
          description: "An optional secondary email address of a contact for this offering."
        referable:
          type: boolean
          default: true
      required:
        - id
        - organisationId
        - contactEmail
        - referable

    OfferingRecord:
      type: object
      title: 'OfferingRecord'
      properties:
        course:
          type: string
          example: "Kaizen"
          description: "The name of the Course to which this Offering applies. This value is only present to help with comprehension. It is not used to match offerings with courses."
        identifier:
          type: string
          description: "The unique identifier of the Course variant to which this Offering applies. The offering is added to the course having this identifier."
          example: "BNM-IPVO"
        organisation:
          type: string
        "contact email":
          type: string
          format: email
          example: "ap-admin@digital.justice.gov.uk"
          description: "The email address of the contact for this offering."
        "secondary contact email":
          type: string
          format: email
          example: "ap-admin2@digital.justice.gov.uk"
          description: "An optional secondary email address of a contact for this offering."
        prisonId:
          type: string
          example: "MDI"
          description: "The prison id for the prison associated with this Offering. This is usually three capital letters."
        referable:
          type: boolean
          default: true
      required:
        - course
        - prisonId
        - identifier
        - referable

    LineMessage:
      description: "warnings and errors for a line in an uploaded CSV file."
      type: object
      properties:
        lineNumber:
          type: integer
          example: 20
          description: "The number of the line in the CSV file that was rejected. The header line is lineNumber 1, the first line of CSV data is lineNumber 2."
        level:
          type: string
          enum:
            - Warning
            - Error
          description: "One of 'Error' or 'Warning'.  If a line has an Error then the data was not added. If it is a Warning then the line was added but there was a problem that should be corrected."
        message:
          type: string
          example: "No match for course 'Kaizen', prisonId 'BWI'"
          description: "Useful information about the Error or Warning."

    ErrorResponse:
      type: object
      properties:
        status:
          type: integer
          example: 404
        errorCode:
          type: integer
        userMessage:
          type: string
          example: "Not found"
        developerMessage:
          type: string
        moreInfo:
          type: string
      required:
        - status

    CourseParticipationUpdate:
      type: object
      properties:
        courseName:
          description: "The name of the course taken by the participant."
          type: string
        setting:
          $ref: '#/components/schemas/CourseParticipationSetting'
        outcome:
          $ref: '#/components/schemas/CourseParticipationOutcome'
        detail:
          type: string
        source:
          type: string

    CourseParticipationCreate:
      allOf:
        - $ref: "#/components/schemas/CourseParticipationUpdate"
        - type: object
          properties:
            prisonNumber:
              description: The prison number of the course participant.
              example: "A1234AA"
              type: string
          required:
            - prisonNumber

    CourseParticipation:
      allOf:
        - $ref: "#/components/schemas/CourseParticipationCreate"
        - type: object
          properties:
            id:
              description: A unique identifier for this record of participation in a course.
              type: string
              format: uuid
            addedBy:
              description: The identity of the person who added this CourseParticipation
              type: string
            createdAt:
              description: The date and time at which this CourseParticipation was created. ISO 8601 date-time format.
              type: string
          required:
            - id
            - addedBy
            - createdAt

    CourseParticipationSettingType:
      description: Either Custody or Community.
      type: string
      enum:
        - custody
        - community

    CourseParticipationSetting:
      description: Information about where the course was held.
      type: object
      properties:
        location:
          type: string
        type:
          $ref: '#/components/schemas/CourseParticipationSettingType'
      required:
        - type

    CourseParticipationOutcome:
      description: The outcome of participating in a course.
      type: object
      properties:
        status:
          type: string
          enum:
            - incomplete
            - complete
        yearStarted:
          type: integer
        yearCompleted:
          type: integer
      required:
        - status

    ReferralCreate:
      type: object
      properties:
        offeringId:
          description: The id (UUID) of an active offering
          type: string
          format: uuid
        prisonNumber:
          description: The prison number of the person who is being referred.
          example: "A1234AA"
          type: string
      required:
        - offeringId
        - prisonNumber

    ReferralUpdate:
      type: object
      properties:
        additionalInformation:
          type: string
        oasysConfirmed:
          type: boolean
          default: false
        hasReviewedProgrammeHistory:
          type: boolean
          default: false
      required:
        - oasysConfirmed
        - hasReviewedProgrammeHistory

    Referral:
      allOf:
        - $ref: "#/components/schemas/ReferralCreate"
        - $ref: "#/components/schemas/ReferralUpdate"
        - type: object
          properties:
            id:
              description: The unique id (UUID) of this referral.
              type: string
              format: uuid
            status:
              description: The status code of the referral.
              type: string
            closed:
              description: Is the status of the referral a closed one.
              type: boolean
            statusDescription:
              description: The status description.
              type: string
            statusColour:
              description: The colour to display status description.
              type: string
            referrerUsername:
              type: string
            submittedOn:
              type: string
          required:
            - id
            - offeringId
            - prisonNumber
            - referrerUsername
            - oasysConfirmed
            - status

    ReferralCreated:
      type: object
      properties:
        referralId:
          description: The unique id (UUID) of the new referral.
          type: string
          format: uuid
      required:
        - referralId

    ReferralStatusUpdate:
      type: object
      properties:
        status:
          type: string
        category:
          type: string
        reason:
          type: string
        notes:
          type: string
        ptUser:
          type: boolean
          description: is the user a pt user
          default: false
      required:
        - status

    PaginatedReferralView:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ReferralView'
        totalPages:
          type: integer
        totalElements:
          type: integer
        pageSize:
          type: integer
        pageNumber:
          type: integer
        pageIsEmpty:
          type: boolean

    ReferralView:
      type: object
      properties:
        id:
          description: The unique id (UUID) of the new referral.
          type: string
          format: uuid
        referrerUsername:
          description: The unique HMPPS username of the user who created this referral.
          type: string
        courseName:
          type: string
        audience:
          type: string
          example: 'Gang offence'
        status:
          type: string
        statusDescription:
          description: The status description.
          type: string
        statusColour:
          description: The colour to display status description.
          type: string
        submittedOn:
          type: string
          format: date-time
          description: Date referral was submitted.
        prisonNumber:
          type: string
        organisationName:
          type: string
          description: Name of the organisation
        organisationId:
          type: string
          description: ID of the organisation
        conditionalReleaseDate:
          type: string
          format: date
          description: Conditional release date.
        paroleEligibilityDate:
          type: string
          format: date
          description: Parole eligibility date.
        tariffExpiryDate:
          type: string
          format: date
          description: Tariff expiry date.
        earliestReleaseDate:
          type: string
          format: date
          description: Earliest release date, if applicable, to this individual. Derived from Sentence information.
        earliestReleaseDateType:
          type: string
          description: Earliest release date type used
        nonDtoReleaseDateType:
          type: string
          description: Release date type
        forename:
          type: string
          description: forename of the person
        surname:
          type: string
          description: surname of the person
        sentenceType:
          type: string
          description: Sentence type description or 'Multiple sentences' if there are more than one
        listDisplayName:
          type: string
          description: The course display name when it is in a list.

    ReferralStatusHistory:
      type: object
      properties:
        id:
          description: The id (UUID) of the status history record.
          type: string
          format: uuid
        referralId:
          description: The unique id (UUID) of the referral.
          type: string
          format: uuid
        status:
          description: The status of the referral.
          type: string
        statusDescription:
          description: The status description.
          type: string
        statusColour:
          description: The colour to display status description.
          type: string
        previousStatus:
          description: The previous status of the referral.
          type: string
        previousStatusDescription:
          description: The previous status description.
          type: string
        previousStatusColour:
          description: The previous colour to display status description.
          type: string
        notes:
          description: The notes associated with the status change.
          type: string
        statusStartDate:
          type: string
          format: date-time
          description: Date referral was changed to this status.
        username:
          type: string
          description: Username of the person who changed to this status

    Person:
      type: object
      properties:
        prisonNumber:
          description: The prison number of the person who is being referred.
          example: "A1234AA"
          type: string
      required:
        - prisonNumber


    OffenceDetail:
      type: object
      properties:
        offenceDetails:
          type: string
          example: Armed robbery
        contactTargeting:
          type: boolean
          default: false
        raciallyMotivated:
          type: boolean
          default: false
        revenge:
          type: boolean
          default: false
        domesticViolence:
          type: boolean
          default: false
        repeatVictimisation:
          type: boolean
          default: false
        victimWasStranger:
          type: boolean
          default: false
        stalking:
          type: boolean
          default: false
        recognisesImpact:
          type: boolean
          default: false
        numberOfOthersInvolved:
          type: integer
          default: 0
        othersInvolvedDetail:
          type: string
          example: There were two others involved who absconded at the scene
        peerGroupInfluences:
          type: string
          example: This person is easily lead
        motivationAndTriggers:
          type: string
          example: Drug misuse fuels this persons motivation
        acceptsResponsibility:
          type: boolean
          default: false
        acceptsResponsibilityDetail:
          type: string
          example: This person fully accepts their actions
        patternOffending:
          type: string
          example: This person has a long history of robbery

    Relationships:
      type: object
      properties:
        dvEvidence:
          type: boolean
          default: false
        victimFormerPartner:
          type: boolean
          default: false
        victimFamilyMember:
          type: boolean
          default: false
        victimOfPartnerFamily:
          type: boolean
          default: false
        perpOfPartnerOrFamily:
          type: boolean
          default: false
        relIssuesDetails:
          type: string
          example: This person has a history of domestic violence
        emotionalCongruence:
          type: string
          example: 0-No problems
        relCurrRelationshipStatus:
          type: string
          example: Not in a relationship
        prevCloseRelationships:
          type: string
          example: 2-Significant problems

    RoshAnalysis:
      type: object
      properties:
        offenceDetails:
          type: string
          example: Tax evasion
        whereAndWhen:
          type: string
          example: at home
        howDone:
          type: string
          example: false accounting
        whoVictims:
          type: string
          example: hmrc
        anyoneElsePresent:
          type: string
          example: company secretary
        whyDone:
          type: string
          example: Greed
        sources:
          type: string
          example: crown court

    Lifestyle:
      type: object
      properties:
        activitiesEncourageOffending:
          type: string
          example: Drug addiction
        lifestyleIssues:
          type: string
          example: Commits robbery to fund drug addiction
        easilyInfluenced:
          type: string
          example: 1-Some problems

    Psychiatric:
      type: object
      properties:
        description:
          type: string
          example: 0-No problems
        difficultiesCoping:
          type: string
        currPsychologicalProblems:
          type: string
        selfHarmSuicidal:
          type: string

    Behaviour:
      type: object
      properties:
        temperControl:
          type: string
          example: 0-No problems
        problemSolvingSkills:
          type: string
          example: 0-No problems
        awarenessOfConsequences:
          type: string
          example: 0-No problems
        achieveGoals:
          type: string
          example: 0-No problems
        understandsViewsOfOthers:
          type: string
          example: 0-No problems
        concreteAbstractThinking:
          type: string
          example: 0-No problems
        sexualPreOccupation:
          type: string
          example: 0-No problems
        offenceRelatedSexualInterests:
          type: string
          example: 0-No problems
        aggressiveControllingBehaviour:
          type: string
          example: 0-No problems
        impulsivity:
          type: string
          example: 0-No problems

    Attitude:
      type: object
      properties:
        proCriminalAttitudes:
          type: string
          example: 0-No problems
        motivationToAddressBehaviour:
          type: string
          example: 0-No problems
        hostileOrientation:
          type: string
          example: 0-No problems

    Health:
      type: object
      properties:
        anyHealthConditions:
          type: boolean
          default: false
        description:
          type: string
          example: Blind in one eye

    LearningNeeds:
      type: object
      properties:
        noFixedAbodeOrTransient:
          type: boolean
          default: false
        workRelatedSkills:
          type: string
          example: 0-No problems
        problemsReadWriteNum:
          type: string
          example: 0-No problems
        learningDifficulties:
          type: string
          example: 0-No problems
        qualifications:
          type: string
          example: 0-Any qualifications
        basicSkillsScore:
          type: string
          example: 6
        basicSkillsScoreDescription:
          type: string
          example: free text about this persons learning needs

    Risks:
      type: object
      properties:
        ogrsYear1:
          type: number
          example: 45
        ogrsYear2:
          type: number
          example: 65
        ogrsRisk:
          type: string
          example: High
        ovpYear1:
          type: number
          example: 23
        ovpYear2:
          type: number
          example: 32
        ovpRisk:
          type: string
          example: Medium
        rsrScore:
          type: number
          example: 3.45
        rsrRisk:
          type: string
          example: Medium
        ospcScore:
          type: string
          example: Low
        ospiScore:
          type: string
          example: High
        overallRoshLevel:
          type: string
          example: Low
        riskPrisonersCustody:
          type: string
          example: Medium
        riskStaffCustody:
          type: string
          example: Medium
        riskKnownAdultCustody:
          type: string
          example: Medium
        riskPublicCustody:
          type: string
          example: Medium
        riskChildrenCustody:
          type: string
          example: Medium
        riskStaffCommunity:
          type: string
          example: Medium
        riskKnownAdultCommunity:
          type: string
          example: Medium
        riskPublicCommunity:
          type: string
          example: Medium
        riskChildrenCommunity:
          type: string
          example: Medium
        imminentRiskOfViolenceTowardsPartner:
          type: string
          example: Low
        imminentRiskOfViolenceTowardsOthers:
          type: string
          example: Low
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/Alert'

    Alert:
      type: object
      properties:
        description:
          type: string
          example: risk to children
        alertType:
          type: string
          example: Sexual Offence
        dateCreated:
          type: string
          format: date
          description: Date alert was created.

    PrisonerSearchRequest:
      type: object
      properties:
        prisonerIdentifier:
          type: string
          description: Prisoner identifier for this case we only accept prison number
          example: A1234AA
        prisonIds:
          type: array
          description: List of Prison Ids (can include OUT and TRN) to restrict the search by. Unrestricted if not supplied or null
          example:
            - MDI
          items:
            type: string
            description: List of Prison Ids (can include OUT and TRN) to restrict the search by. Unrestricted if not supplied or null
            example: '["MDI"]'
      required:
        - prisonerIdentifier

    PrisonerSearchResponse:
      type: object
      properties:
        bookingId:
          type: string
        conditionalReleaseDate:
          type: string
          format: date
        prisonName:
          type: string
        dateOfBirth:
          type: string
          format: date
        ethnicity:
          type: string
        gender:
          type: string
        homeDetentionCurfewEligibilityDate:
          type: string
          format: date
        indeterminateSentence:
          type: boolean
        firstName:
          type: string
        lastName:
          type: string
        paroleEligibilityDate:
          type: string
          format: date
        prisonerNumber:
          type: string
        religion:
          type: string
        sentenceExpiryDate:
          type: string
          format: date
        sentenceStartDate:
          type: string
          format: date
        tariffDate:
          type: string
          format: date
      required:
        - bookingId
        - prisonerNumber

    PeopleSearchRequest:
      type: object
      properties:
        prisonerIdentifier:
          type: string
          description: Prisoner identifier for this case we only accept prison number
          example: A1234AA
        prisonIds:
          type: array
          description: List of Prison Ids (can include OUT and TRN) to restrict the search by. Unrestricted if not supplied or null
          example:
            - MDI
          items:
            type: string
            description: List of Prison Ids (can include OUT and TRN) to restrict the search by. Unrestricted if not supplied or null
            example: '["MDI"]'
      required:
        - prisonerIdentifier

    PeopleSearchResponse:
      type: object
      properties:
        bookingId:
          type: string
        conditionalReleaseDate:
          type: string
          format: date
        prisonName:
          type: string
        dateOfBirth:
          type: string
          format: date
        ethnicity:
          type: string
        gender:
          type: string
        homeDetentionCurfewEligibilityDate:
          type: string
          format: date
        indeterminateSentence:
          type: boolean
        firstName:
          type: string
        lastName:
          type: string
        paroleEligibilityDate:
          type: string
          format: date
        prisonerNumber:
          type: string
        religion:
          type: string
        sentenceExpiryDate:
          type: string
          format: date
        sentenceStartDate:
          type: string
          format: date
        tariffDate:
          type: string
          format: date
      required:
        - bookingId
        - prisonerNumber
    PrisonSearchRequest:
      type: object
      properties:
        prisonIds:
          type: array
          description: List of Prisons
          example:
            - MDI
          items:
            type: string
            description: List of Prison Ids
            example: '["MDI"]'
      required:
        - prisonIds

    PrisonSearchResponse:
      type: object
      properties:
        prisonId:
          type: string
        prisonName:
          type: string
        active:
          type: boolean
        male:
          type: boolean
        female:
          type: boolean
        contracted:
          type: boolean
        types:
          type: array
          items:
            $ref: '#/components/schemas/PrisonType'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        operators:
          type: array
          items:
            $ref: '#/components/schemas/PrisonOperator'

      required:
        - bookingId
        - prisonerNumber

    ConfirmationFields:
      type: object
      properties:
        primaryHeading:
          type: string
          example: Move referral to awaiting assessment
        primaryDescription:
          type: string
          example: Submitting this will change the status to awaiting assessment.
        secondaryHeading:
          type: string
          example: Give a reason
        secondaryDescription:
          type: string
          example: You must give a reason why this referral is being moved to suitable but not ready.
        warningText:
          type: string
          example: Submitting this will pause the referral
        hasConfirmation:
          type: boolean
          default: false
        notesOptional:
          type: boolean
          default: false

    ReferralStatusRefData:
      type: object
      properties:
        code:
          type: string
          example: WITHDRAWN
        description:
          type: string
          example: Withdrawn
        hintText:
          type: string
          example: The application has been withdrawn
        confirmationText:
          type: string
          example: I confirm that this person is eligible.
        hasNotes:
          description: flag to show this status has notes text box
          type: boolean
        hasConfirmation:
          description: flag to show this status has confirmation box
          type: boolean
        colour:
          type: string
          example: light-grey
        closed:
          description: flag to show this is a closed status
          type: boolean
        draft:
          description: flag to show this is a draft status
          type: boolean
        hold:
          description: flag to show this is a hold status
          type: boolean
        release:
          description: flag to show this is a release status
          type: boolean
        deselectAndKeepOpen:
          description: flag to show this a bespoke status of deslected and keep open
          type: boolean
        defaultOrder:
          description: sort order for statuses
          type: integer
        notesOptional:
          description: flag to show whether the notes are optional
          type: boolean
      required:
        - code
        - description
        - colour

    ReferralStatusCategory:
      type: object
      properties:
        code:
          type: string
          example: ADMIN
        description:
          type: string
          example: Administrative error
        referralStatusCode:
          type: string
          example: WITHDRAWN
      required:
        - code
        - description
        - referralStatusCode

    ReferralStatusReason:
      type: object
      properties:
        code:
          type: string
          example: DUPLICATE
        description:
          type: string
          example: Duplicate referral
        referralCategoryCode:
          type: string
          example: ADMIN
      required:
        - code
        - description
        - referralCategoryCode

    EnabledOrganisation:
      type: object
      properties:
        code:
          type: string
          example: MDI
        description:
          type: string
          example: Stocken

    SAR:
      type: object
      properties:
        content:
          type: string

    SentenceDetails:
      type: object
      properties:
        sentences:
          type: array
          items:
            $ref: '#/components/schemas/Sentence'
        keyDates:
          type: array
          items:
            $ref: '#/components/schemas/KeyDate'

    Sentence:
      type: object
      properties:
        description:
          type: string
          example: CJA03 Standard Determinate Sentence
        sentenceStartDate:
          type: string
          format: date

    KeyDate:
      type: object
      properties:
        type:
          type: string
          example: earliestReleaseDate
        code:
          type: string
          example: ERD
        description:
          type: string
          example: Earliest Release Date
        earliestReleaseDate:
          type: boolean
          default: false
        date:
          type: string
          format: date
        order:
          type: integer
          example: This is more like a weighting than an order - higher the number the more important the date.
      required:
        - type
        - code

    PrisonType:
      type: object
      properties:
        code:
          type: string
          example: "YOI"
        description:
          type: string
          example: "His Majesty’s Youth Offender Institution"
      required:
        - code
        - description

    Category:
      type: object
      properties:
        category:
          type: string
          example: "E"
      required:
        - category

    PrisonOperator:
      type: object
      properties:
        name:
          type: string
          example: "PSP, G4S"
      required:
        - name

    Address:
      type: object
      properties:
        addressLine1:
          type: string
          example: "Higher Lane"
        addressLine2:
          type: string
        town:
          type: string
          example: "Liverpool"
        county:
          type: string
          example: "Merseyside"
        postcode:
          type: string
          example: "L9 7LH"
        country:
          type: string
          example: "England"
      required:
        - addressLine1
        - town
        - postcode
        - country

    CaseLoad:
      type: object
      properties:
        caseLoadId:
          type: string
          nullable: true
          description: The unique identifier of the caseload.
        description:
          type: string
          nullable: true
          description: The description of the caseload.
        type:
          type: string
          nullable: true
          description: The type of the caseload.
        caseloadFunction:
          type: string
          nullable: true
          description: The function of the caseload.
        currentlyActive:
          type: boolean
          nullable: true
          description: Indicates whether the caseload is currently active or not.

    Offence:
      type: object
      properties:
        offence:
          type: string
          description: Description of the offence along with the code.
        category:
          type: string
          nullable: true
          description: Legislation.
        offenceDate:
          type: string
          format: date
          description: Offence start date.

    DrugAlcoholDetail:
      type: object
      properties:
        drug:
          $ref: '#/components/schemas/OasysDrugDetail'
        alcohol:
          $ref: '#/components/schemas/OasysAlcoholDetail'

    OasysDrugDetail:
      type: object
      properties:
        levelOfUseOfMainDrug:
          type: string
          nullable: true
        drugsMajorActivity:
          type: string
          nullable: true
    OasysAlcoholDetail:
      type: object
      properties:
        alcoholLinkedToHarm:
          type: string
          nullable: true
        alcoholIssuesDetails:
          type: string
          nullable: true
        frequencyAndLevel:
          type: string
          nullable: true
        bingeDrinking:
          type: string
          nullable: true

    Organisation:
      type: object
      properties:
        code:
          type: string
          example: "MDI"
        prisonName:
          type: string
          example: "Moorland HMP"