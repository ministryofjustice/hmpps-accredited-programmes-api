openapi: 3.0.1
info:
  title: Accredited Programmes API
  version: 1.0.0
servers:
  - url: /
security:
  - bearerAuth: [ ]
paths:
  /subject-access-request:
    get:
      operationId: subjectAccessRequestGet
      summary: API call to retrieve SAR information about a person
      tags:
        - Subject Access Request
      description: |
        Either NOMIS Prison Number (PRN) must be provided as part of the request.
        * If the product uses the identifier type transmitted in the request, it can respond with its data and HTTP code 200.
        * If the product uses the identifier type transmitted in the request but has no data to respond with, it should respond with HTTP code 204
        * If the product does not use the identifier type transmitted in the request, it should respond with HTTP code 209.
      parameters:
        - name: prn
          in: query
          description: prison number
          required: false
          schema:
            type: string
        - name: fromDate
          in: query
          description: from date
          schema:
            type: string
            format: date
        - name: toDate
          in: query
          description: to date
          schema:
            type: string
            format: date
      responses:
        '200':
          description: the sar content
          content:
            application/json:
              schema:
                type: object
        '204':
          description: Request successfully processed - no content found
        '209':
          description: Subject Identifier is not recognised by this service


  /people/{prisonNumber}/sentences:
    get:
      tags:
        - Person
      summary: Sentence details
      operationId: getSentenceDetails
      parameters:
        - name: prisonNumber
          in: path
          description: prison number
          example: "A1234AA"
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '_schemas.yml#/components/schemas/SentenceDetails'
        404:
          $ref: '_shared.yml#/components/responses/404Response'

  /prisoner-search:
    post:
      tags:
        - Person
      deprecated: true
      summary: (Deprecated - use /people/search instead) Search for a prisoner via prison search api by prisoner id and caseload.
      operationId: searchPrisoner
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: '_schemas.yml#/components/schemas/PrisonerSearchRequest'
      responses:
        201:
          description: The prisoner search results.
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '_schemas.yml#/components/schemas/PrisonerSearchResponse'
        400:
          $ref: '_shared.yml#/components/responses/400Response'
        401:
          $ref: '_shared.yml#/components/responses/401Response'

  /people/search:
    post:
      tags:
        - Person
      summary: Search for a prisoner via prison search api by prisoner id and caseload.
      operationId: searchPeople
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: '_schemas.yml#/components/schemas/PeopleSearchRequest'
      responses:
        201:
          description: The prisoner search results.
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '_schemas.yml#/components/schemas/PeopleSearchResponse'
        400:
          $ref: '_shared.yml#/components/responses/400Response'
        401:
          $ref: '_shared.yml#/components/responses/401Response'

  /prison-search:
    post:
      tags:
        - Prison
      summary: Search for prisons via prison register api by prison id.
      operationId: getPrisons
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: '_schemas.yml#/components/schemas/PrisonSearchRequest'
      responses:
        201:
          description: The prisoner search results.
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '_schemas.yml#/components/schemas/PrisonSearchResponse'
        400:
          $ref: '_shared.yml#/components/responses/400Response'
        401:
          $ref: '_shared.yml#/components/responses/401Response'


  /prison-search/{prisonId}:
    get:
      tags:
        - Prison
      summary: Details for a single prison
      operationId: getPrisonById
      parameters:
        - name: prisonId
          in: path
          description: A prison identifier
          required: true
          schema:
            type: string
            pattern: '^[A-Z]{3,6}$'
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '_schemas.yml#/components/schemas/PrisonSearchResponse'
        400:
          $ref: '_shared.yml#/components/responses/400Response'
        401:
          $ref: '_shared.yml#/components/responses/401Response'

  /courses:
    get:
      tags:
        - Courses
      summary: List all courses
      operationId: getAllCourses
      responses:
        200:
          description: Return a JSON representation of all courses that are not withdrawn.
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '_schemas.yml#/components/schemas/Course'
    post:
      tags:
        - Courses
      summary: Create a course
      operationId: createCourse
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '_schemas.yml#/components/schemas/CourseCreateRequest'
      responses:
        200:
          description: Return a JSON representation of the created course
          content:
            'application/json':
              schema:
                $ref: '_schemas.yml#/components/schemas/Course'
        400:
          $ref: '_shared.yml#/components/responses/400Response'
        401:
          $ref: '_shared.yml#/components/responses/401Response'

  /courses/csv:
    put:
      tags:
        - Courses
      summary: Upload a CSV format file containing a full set of Courses data.
      operationId: updateCourses
      requestBody:
        required: true
        content:
          'text/csv;charset=UTF-8':
            schema:
              type: array
              items:
                $ref: '_schemas.yml#/components/schemas/CourseRecord'
      responses:
        204:
          description: Successful update
        400:
          description: Bad input
    get:
      tags:
        - Courses
      summary: List all courses
      operationId: getCoursesCsv
      responses:
        200:
          description: Return a CSV format representation of all courses that are not withdrawn. The data is compatible with the PUT /courses endpoint and may be round-tripped.
          content:
            'text/csv;charset=UTF-8':
              schema:
                type: array
                items:
                  $ref: '_schemas.yml#/components/schemas/CourseRecord'

  /courses/course-names:
    get:
      tags:
        - Courses
      summary: Get all unique course names
      operationId: getAllCourseNames
      parameters:
        - name: includeWithdrawn
          in: query
          description: flag to include withdrawn
          required: false
          schema:
            type: boolean
      responses:
        200:
          description: Return a JSON representation of all unique course names that are not withdrawn.
          content:
            'application/json':
              schema:
                type: array
                items:
                  type: string

  /courses/prerequisites/csv:
    put:
      tags:
        - Course Prerequisites
      summary: Upload a CSV format file containing a full set of prerequisites data for the current set of courses.
      operationId: updatePrerequisites
      description: >
        Accepts a CSV format file of data representing the desired state of all prerequisite data attached to the current set of courses.
        <p>Pre-existing prerequisite data will be removed before the new data is applied.
        <p>The first row of CSV data is treated as a header row.  The column headings in the header row must much the names of the fields in the PrerequisiteRecord schema. Column order is not important.
      requestBody:
        required: true
        content:
          'text/csv;charset=UTF-8':
            schema:
              type: array
              items:
                $ref: '_schemas.yml#/components/schemas/PrerequisiteRecord'
      responses:
        200:
          description: Successful update
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '_schemas.yml#/components/schemas/LineMessage'
        400:
          description: Bad input
          content:
            'application/json':
              schema:
                $ref: '_schemas.yml#/components/schemas/ErrorResponse'
    get:
      tags:
        - Course Prerequisites
      summary: Download a CSV format representation of the current set of prerequisites.
      operationId: getPrerequisitesCsv
      responses:
        200:
          description: The CSV formatted data is compatible with the PUT operation and may be round-tripped.
          content:
            'text/csv;charset=UTF-8':
              schema:
                type: array
                items:
                  $ref: '_schemas.yml#/components/schemas/PrerequisiteRecord'

  /courses/{id}/prerequisites:
    get:
      tags:
        - Courses
      summary: Get a list of prerequisites for a course.
      operationId: getCoursePrerequisites
      parameters:
        - name: id
          in: path
          description: A course identifier
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description:
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '_schemas.yml#/components/schemas/CoursePrerequisite'
    put:
      tags:
        - Courses
      operationId: updateCoursePrerequisites
      description: Replace all prerequisites for a course
      parameters:
        - name: id
          in: path
          description: A course identifier
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: array
              items:
                $ref: '_schemas.yml#/components/schemas/CoursePrerequisite'
      responses:
        200:
          description: Successful update
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '_schemas.yml#/components/schemas/CoursePrerequisite'
        400:
          $ref: '_shared.yml#/components/responses/400Response'

  /courses/{id}:
    get:
      tags:
        - Courses
      summary: Details for a single course
      operationId: getCourseById
      parameters:
        - name: id
          in: path
          description: A course identifier
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '_schemas.yml#/components/schemas/Course'
    put:
      tags:
        - Courses
      summary: Update a course
      description: Updates the details of a specific course
      operationId: updateCourse
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: A course identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '_schemas.yml#/components/schemas/CourseUpdateRequest'
      responses:
        '200':
          description: Successful update
          content:
            application/json:
              schema:
                $ref: '_schemas.yml#/components/schemas/Course'
        '400':
          description: Bad input
        '401':
          description: You are not authorized to view the resource
        '403':
          description: Accessing the resource you were trying to reach is forbidden
        '404':
          description: The resource you were trying to reach is not found

  /courses/{id}/offerings:
    get:
      tags:
        - Course Offerings
      summary: List all offerings for a course
      operationId: getAllOfferingsByCourseId
      parameters:
        - name: id
          in: path
          description: A course identifier
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '_schemas.yml#/components/schemas/CourseOffering'
    put:
      tags:
        - Course Offerings
      summary: Add or update course offerings
      operationId: addUpdateCourseOfferings
      parameters:
        - name: id
          in: path
          description: A course identifier
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: array
              items:
                $ref: '_schemas.yml#/components/schemas/CourseOffering'

      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '_schemas.yml#/components/schemas/CourseOffering'

  /courses/{id}/offerings/{offeringId}:
    delete:
      tags:
        - Course Offerings
      summary: Delete a course offering, This can only be done if there are no referrals using this offering.
      operationId: deleteCourseOffering
      parameters:
        - name: id
          in: path
          description: A course identifier
          required: true
          schema:
            type: string
            format: uuid
        - name: offeringId
          in: path
          description: An offering identifier
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: successful operation

  /courses/audiences:
    get:
      tags:
        - Courses
      summary: Get all audiences
      description: Returns a list of audiences with their name and colour
      operationId: getAudiences
      responses:
        '200':
          description: Successfully retrieved list of audience
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '_schemas.yml#/components/schemas/Audience'
        '401':
          description: You are not authorized to view the resource
        '403':
          description: Accessing the resource you were trying to reach is forbidden
        '404':
          description: The resource you were trying to reach is not found

  /organisations/{organisationId}/courses:
    get:
      tags:
        - Course Offerings
      summary: List all courses for an organisationId
      operationId: getAllCoursesByOrganisationId
      parameters:
        - name: organisationId
          in: path
          description: A organisation identifier
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '_schemas.yml#/components/schemas/Course'

  /offerings/csv:
    put:
      tags:
        - Course Offerings
      summary: Upload all offerings in CSV format.
      operationId: updateOfferings
      description: >
        Accepts a CSV format file of data representing the desired state of all offerings data attached to the current set of courses.
        <p>Pre-existing offering data will be removed before the new data is applied.
        <p>The first row of CSV data is treated as a header row.  The column headings in the header row must much the names of the fields in the OfferingRecord schema. Column order is not important.
      requestBody:
        required: true
        content:
          'text/csv;charset=UTF-8':
            schema:
              type: array
              items:
                $ref: '_schemas.yml#/components/schemas/OfferingRecord'
      responses:
        204:
          description: Successful update
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '_schemas.yml#/components/schemas/LineMessage'
        400:
          $ref: '_shared.yml#/components/responses/400Response'

    get:
      tags:
        - Course Offerings
      summary: Download all Offerings in CSV format
      operationId: getOfferingsCsv
      responses:
        200:
          description: successful operation
          content:
            'text/csv;charset=UTF-8':
              schema:
                type: array
                items:
                  $ref: '_schemas.yml#/components/schemas/OfferingRecord'

  /offerings/{id}:
    get:
      tags:
        - Course Offerings
      summary: Details for a single course offering
      operationId: getOfferingById
      parameters:
        - name: id
          in: path
          description: A course offering identifier
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '_schemas.yml#/components/schemas/CourseOffering'
        401:
          $ref: '_shared.yml#/components/responses/401Response'
        403:
          description: Forbidden.  The client is not authorised to access this offering.
        400:
          $ref: '_shared.yml#/components/responses/400Response'

  /referrals:
    post:
      tags:
        - Referrals
      summary: Start a referral
      operationId: createReferral
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: '_schemas.yml#/components/schemas/ReferralCreate'
      responses:
        201:
          description: Started referral
          content:
            'application/json':
              schema:
                $ref: '_schemas.yml#/components/schemas/ReferralCreated'
        400:
          $ref: '_shared.yml#/components/responses/400Response'
        401:
          $ref: '_shared.yml#/components/responses/401Response'

    get:
      summary: Retrieve some referrals
      operationId: getReferrals
      tags:
        - Referrals
      parameters:
        - name: status
          in: query
          description: If present, only return referrals in the given state
          required: false
          schema:
            type: string
        - name: offeringId
          in: query
          description: The id (UUID) of an active offering. If present, only return referrals for that offering.
          required: false
          schema:
            type: string
            format: uuid
        - name: prisonNumber
          in: query
          description: The prison number of the person who is being referred. If present, only return referrals for the person.
          example: "A1234AA"
          required: false
          schema:
            type: string
      responses:
        200:
          description: Returns information about matching referrals
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '_schemas.yml#/components/schemas/Referral'
        401:
          description: The request was unauthorised
        403:
          description: Forbidden.  The client is not authorised to access referrals.

  /referrals/{id}:
    get:
      tags:
        - Referrals
      summary: Retrieve a referral
      operationId: getReferralById
      parameters:
        - name: id
          in: path
          description: The id (UUID) of a referral
          required: true
          schema:
            type: string
            format: uuid
        - name: updatePerson
          in: query
          description: parameter to decide whether to update the local person data
          required: false
          schema:
            type: boolean
            default: false
      responses:
        200:
          description: Information about the referral
          content:
            'application/json':
              schema:
                $ref: '_schemas.yml#/components/schemas/Referral'
        401:
          description: The request was unauthorised
        403:
          description: Forbidden.  The client is not authorised to access this referral.
        404:
          description: The referral does not exist

    put:
      tags:
        - Referrals
      summary: Update a referral
      operationId: updateReferralById
      parameters:
        - name: id
          in: path
          description: The id (UUID) of a referral
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: "_schemas.yml#/components/schemas/ReferralUpdate"
      responses:
        204:
          description: The referral was updated
        401:
          description: The request was unauthorised
        403:
          description: Forbidden.  The client is not authorised to access this referral.
        404:
          description: The referral does not exist

    delete:
      summary: Delete a draft referral
      description: Deletes a draft referral by its ID.
      operationId: deleteReferralById
      tags:
        - Referrals
      parameters:
        - name: id
          in: path
          description: The id (UUID) of a referral
          required: true
          schema:
            type: string
            format: uuid
      responses:
        204:
          description: No Content - The referral was successfully deleted
        401:
          description: The request was unauthorised
        403:
          description: Not authorised to access this endpoint/these referrals
        404:
          description: No referrals for supplied organisationId (Not Found).

  /referrals/{id}/status-transitions:
    get:
      tags:
        - Referrals
      summary: Retrieve the next available status transitions for a referral
      operationId: getNextStatusTransitions
      parameters:
        - name: id
          in: path
          description: The id (UUID) of a referral
          required: true
          schema:
            type: string
            format: uuid
        - name: ptUser
          in: query
          description: is the user a Programme Team user
          required: false
          schema:
            type: boolean
            default: false
        - name: deselectAndKeepOpen
          in: query
          description: flag for bespoke deselection option
          required: false
          schema:
            type: boolean
            default: false
      responses:
        200:
          description: The list of statuses a referral can move on to
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '_schemas.yml#/components/schemas/ReferralStatusRefData'
        401:
          description: The request was unauthorised
        403:
          description: Forbidden.  The client is not authorised to access this referral.
        404:
          description: The referral does not exist

  /referrals/{id}/confirmation-text/{chosenStatusCode}:
    get:
      tags:
        - Referrals
      summary: Endpoint to present the UI with the appropriate text for the status change chosen.
      operationId: getConfirmationText
      parameters:
        - name: id
          in: path
          description: The id (UUID) of a referral
          required: true
          schema:
            type: string
            format: uuid
        - name: chosenStatusCode
          in: path
          description: The status code that was chosen
          required: true
          schema:
            type: string
        - name: ptUser
          in: query
          description: is the user a Programme Team user
          required: false
          schema:
            type: boolean
            default: false
        - name: deselectAndKeepOpen
          in: query
          description: flag for bespoke deselection option
          required: false
          schema:
            type: boolean
            default: false
      responses:
        200:
          description: The screen fields for the confirmation page
          content:
            'application/json':
              schema:
                $ref: '_schemas.yml#/components/schemas/ConfirmationFields'
        401:
          description: The request was unauthorised
        403:
          description: Forbidden.  The client is not authorised to access this referral.
        404:
          description: The referral does not exist

  /referrals/{id}/status:
    put:
      summary: Change a referral's status
      tags:
        - Referrals
      operationId: updateReferralStatusById
      parameters:
        - name: id
          in: path
          description: The id (UUID) of a referral
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: '_schemas.yml#/components/schemas/ReferralStatusUpdate'
      responses:
        204:
          description: The referral now has the requested status.
        401:
          description: The request was unauthorised.
        403:
          description: Forbidden.  The client is not authorised to access this referral.
        404:
          description: The referral does not exist.
        409:
          description: The referral may not change its status to the supplied value.

  /referrals/{id}/submit:
    post:
      summary: Submit a completed referral
      tags:
        - Referrals
      operationId: submitReferralById
      parameters:
        - name: id
          in: path
          description: The id (UUID) of a referral
          required: true
          schema:
            type: string
            format: uuid
      responses:
        204:
          description: Submitted a completed referral.
        401:
          description: The request was unauthorised.
        403:
          description: Forbidden. The client is not authorised to access this referral.
        404:
          description: The referral does not exist.

  /referrals/{id}/status-history:
    get:
      tags:
        - Referrals
      summary: Returns the referral status history for this referral
      operationId: statusHistory
      parameters:
        - name: id
          in: path
          description: The id (UUID) of a referral
          required: true
          schema:
            type: string
            format: uuid
        - name: updatePerson
          in: query
          description: parameter to decide whether to update the local person data
          required: false
          schema:
            type: boolean
            default: false
      responses:
        201:
          description: A list of status history
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '_schemas.yml#/components/schemas/ReferralStatusHistory'
        400:
          $ref: '_shared.yml#/components/responses/400Response'
        401:
          $ref: '_shared.yml#/components/responses/401Response'

  /referrals/view/organisation/{organisationId}/dashboard:
    get:
      summary: Get paginated referrals by organisationId
      tags:
        - Referrals
      operationId: getReferralViewsByOrganisationId
      parameters:
        - name: organisationId
          in: path
          description: The organisationId of an organisation
          required: true
          schema:
            type: string
        - name: nameOrId
          in: query
          description: 'The persons name: forename surname or surname or prison number. Name wll be a case insensitive like search. 
                    For example entering John will return people with the forename or surname containing the name john like johnathan.
                    If two names are given then the assumption is that they are forename and surname. And if there is a single term that matches 
                    the regex for a prison number then only an exact prison number match will be carried out'
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: Page number of the requested page
          required: false
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            default: 10
        - name: status
          in: query
          description: Filter by the status of the referral
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: audience
          in: query
          description: Filter by the audience of the referral
          required: false
          schema:
            type: string
        - name: courseName
          in: query
          description: Filter by the name of the course associated with this referral
          required: false
          schema:
            type: string
        - name: statusGroup
          in: query
          description: Additional filter to only show "open", "closed" or "draft" referrals
          required: false
          schema:
            type: string
        - name: sortColumn
          in: query
          description: Column to sort by default "surname"
          required: false
          schema:
            type: string
        - name: sortDirection
          in: query
          description: Direction to sort by [ascending/descending] default "ascending"
          required: false
          schema:
            type: string
      responses:
        200:
          description: Paginated summary of referrals for an organisation
          content:
            'application/json':
              schema:
                $ref: '_schemas.yml#/components/schemas/PaginatedReferralView'
        401:
          description: The request was unauthorised
        403:
          description: Not authorised to access this endpoint/these referrals
        404:
          description: No referrals for supplied organisationId (Not Found).

  /referrals/view/me/dashboard:
    get:
      summary: Get paginated referrals for the current user
      tags:
        - Referrals
      operationId: getReferralViewsByCurrentUser
      parameters:
        - name: page
          in: query
          description: Page number of the requested page
          required: false
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            default: 10
        - name: nameOrId
          in: query
          description: 'The persons name: forename surname or surname or prison number. Name wll be a case insensitive like search. 
                    For example entering John will return people with the forename or surname containing the name john like johnathan.
                    If two names are given then the assumption is that they are forename and surname. And if there is a single term that matches 
                    the regex for a prison number then only an exact prison number match will be carried out'
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: Filter by the status of the referral
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: audience
          in: query
          description: Filter by the audience of the referral
          required: false
          schema:
            type: string
        - name: courseName
          in: query
          description: Filter by the name of the course associated with this referral
          required: false
          schema:
            type: string
        - name: statusGroup
          in: query
          description: Additional filter to only show "open", "closed" or "draft" referrals
          required: false
          schema:
            type: string
        - name: sortColumn
          in: query
          description: Column to sort by default "surname"
          required: false
          schema:
            type: string
        - name: sortDirection
          in: query
          description: Direction to sort by [ascending/descending] default "ascending"
          required: false
          schema:
            type: string
      responses:
        200:
          description: Paginated summary of referrals for an organisation
          content:
            'application/json':
              schema:
                $ref: '_schemas.yml#/components/schemas/PaginatedReferralView'
        401:
          description: The request was unauthorised
        403:
          description: Not authorised to access this endpoint/these referrals
        404:
          description: No referrals for supplied organisationId (Not Found).

  /offerings/{id}/course:
    get:
      tags:
        - Courses
      summary: Retrieve the course that owns an offering.
      operationId: getCourseByOfferingId
      parameters:
        - name: id
          in: path
          description: The id (UUID) of an offering.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Information about the Course that owns the offering.
          content:
            'application/json':
              schema:
                $ref: '_schemas.yml#/components/schemas/Course'
        401:
          description: The request was unauthorised
        403:
          description: Forbidden.  The client is not authorised to access this offering.
        404:
          description: No offering has the supplied id (Not Found).

  /course-participations:
    post:
      tags:
        - Course Participations
      summary: Record information about a person's prior participation in a course.
      operationId: createCourseParticipation
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: '_schemas.yml#/components/schemas/CourseParticipationCreate'
      responses:
        201:
          description: The course participation information has been added.
          content:
            'application/json':
              schema:
                $ref: "_schemas.yml#/components/schemas/CourseParticipation"
        400:
          $ref: '_shared.yml#/components/responses/400Response'
        401:
          $ref: '_shared.yml#/components/responses/401Response'

  /course-participations/{id}:
    get:
      tags:
        - Course Participations
      summary: Return information about a person's participation in a course. Selected by a unique identifier.
      operationId: getCourseParticipationById
      parameters:
        - name: id
          in: path
          description: The unique identifier assigned to this record when it was created.
          schema:
            type: string
            format: uuid
          required: true
      responses:
        200:
          description: The selected course participation record.
          content:
            'application/json':
              schema:
                $ref: "_schemas.yml#/components/schemas/CourseParticipation"
        400:
          $ref: '_shared.yml#/components/responses/400Response'

    put:
      tags:
        - Course Participations
      summary: Update the information about a person's participation in a course.
      operationId: updateCourseParticipationById
      parameters:
        - name: id
          in: path
          description: The unique identifier assigned to this record when it was created.
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          'application/json':
            schema:
              $ref: "_schemas.yml#/components/schemas/CourseParticipationUpdate"
        required: true
      responses:
        200:
          description: The information about a person's participation in a course has been updated.
          content:
            'application/json':
              schema:
                $ref: "_schemas.yml#/components/schemas/CourseParticipation"
        401:
          $ref: '_shared.yml#/components/responses/401Response'
        404:
          description: There is no information for the id, so it cannot be updated.
          content:
            'application/json':
              schema:
                $ref: '_schemas.yml#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Course Participations
      summary: Delete information about a person's participation in a course.
      operationId: deleteCourseParticipationById
      parameters:
        - name: id
          in: path
          description: The unique identifier assigned to this record when it was created.
          schema:
            type: string
            format: uuid
          required: true
      responses:
        204:
          description: The information about a person's participation in a course has been deleted.
        401:
          $ref: '_shared.yml#/components/responses/401Response'

  /people/{prisonNumber}/course-participations:
    get:
      tags:
        - Course Participations
      summary: Retrieve course participation information for a person identified by their prison number.
      operationId: getCourseParticipationsByPrisonNumber
      parameters:
        - name: prisonNumber
          in: path
          description: The prison number of the person for whom the information should be retrieved.
          example: "A1234AA"
          required: true
          schema:
            type: string
      responses:
        200:
          description: All historic course participation information for the person.  Empty if none found.
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "_schemas.yml#/components/schemas/CourseParticipation"
        401:
          $ref: '_shared.yml#/components/responses/401Response'

  /people/offences/{prisonNumber}:
    get:
      summary: Get details of an offence by prison number
      description: Retrieves details of an offence by its unique code.
      tags:
        - Person
      operationId: getOffences
      parameters:
        - name: prisonNumber
          in: path
          description: The prison number of the person for whom the information should be retrieved.
          example: "A1234AA"
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '_schemas.yml#/components/schemas/Offence'
                type: array
        401:
          $ref: '_shared.yml#/components/responses/401Response'
        403:
          description: Forbidden.  The client is not authorised to access person.
        400:
          $ref: '_shared.yml#/components/responses/400Response'

  /oasys/{prisonNumber}/offence-details:
    get:
      tags:
        - Oasys Integration
      summary: Offence details as held by Oasys
      operationId: getOffenceDetails
      parameters:
        - name: prisonNumber
          in: path
          description: Prison nomis identifier
          example: "A1234AA"
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '_schemas.yml#/components/schemas/OffenceDetail'
        401:
          description: Unauthorised. The request was unauthorised.
        403:
          description: Forbidden.  The client is not authorised to access person.
        404:
          $ref: '_shared.yml#/components/responses/404Response'


  /oasys/{prisonNumber}/relationships:
    get:
      tags:
        - Oasys Integration
      summary: Relationships details as held by Oasys
      operationId: getRelationships
      parameters:
        - name: prisonNumber
          in: path
          description: Prison nomis identifier
          example: "A1234AA"
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '_schemas.yml#/components/schemas/Relationships'
        401:
          description: Unauthorised. The request was unauthorised.
        403:
          description: Forbidden.  The client is not authorised to access person.
        404:
          $ref: '_shared.yml#/components/responses/404Response'

  /oasys/{prisonNumber}/rosh-analysis:
    get:
      tags:
        - Oasys Integration
      summary: ROSH analysis details as held by Oasys
      operationId: getRoshAnalysis
      parameters:
        - name: prisonNumber
          in: path
          description: Prison nomis identifier
          example: "A1234AA"
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '_schemas.yml#/components/schemas/RoshAnalysis'
        401:
          description: Unauthorised. The request was unauthorised.
        403:
          description: Forbidden.  The client is not authorised to access person.
        404:
          $ref: '_shared.yml#/components/responses/404Response'

  /oasys/{prisonNumber}/lifestyle:
    get:
      tags:
        - Oasys Integration
      summary: Lifestyle details as held by Oasys
      operationId: getLifestyle
      parameters:
        - name: prisonNumber
          in: path
          description: Prison nomis identifier
          example: "A1234AA"
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '_schemas.yml#/components/schemas/Lifestyle'
        401:
          description: Unauthorised. The request was unauthorised.
        403:
          description: Forbidden.  The client is not authorised to access person.
        404:
          $ref: '_shared.yml#/components/responses/404InvalidPrisonNumberResponse'

  /oasys/{prisonNumber}/psychiatric:
    get:
      tags:
        - Oasys Integration
      summary: Psychiatric details as held by Oasys
      operationId: getPsychiatric
      parameters:
        - name: prisonNumber
          in: path
          description: Prison nomis identifier
          example: "A1234AA"
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '_schemas.yml#/components/schemas/Psychiatric'
        401:
          description: Unauthorised. The request was unauthorised.
        403:
          description: Forbidden.  The client is not authorised to access person.
        404:
          $ref: '_shared.yml#/components/responses/404InvalidPrisonNumberResponse'

  /oasys/{prisonNumber}/behaviour:
    get:
      tags:
        - Oasys Integration
      summary: Behaviour details as held by Oasys
      operationId: getBehaviour
      parameters:
        - name: prisonNumber
          in: path
          description: Prison nomis identifier
          example: "A1234AA"
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '_schemas.yml#/components/schemas/Behaviour'
        401:
          description: Unauthorised. The request was unauthorised.
        403:
          description: Forbidden.  The client is not authorised to access person.
        404:
          $ref: '_shared.yml#/components/responses/404InvalidPrisonNumberResponse'

  /oasys/{prisonNumber}/attitude:
    get:
      tags:
        - Oasys Integration
      summary: Attitude details as held by Oasys
      operationId: getAttitude
      parameters:
        - name: prisonNumber
          in: path
          description: Prison nomis identifier
          example: "A1234AA"
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '_schemas.yml#/components/schemas/Attitude'
        401:
          description: Unauthorised. The request was unauthorised.
        403:
          description: Forbidden.  The client is not authorised to access person.
        404:
          $ref: '_shared.yml#/components/responses/404InvalidPrisonNumberResponse'

  /oasys/{prisonNumber}/health:
    get:
      tags:
        - Oasys Integration
      summary: Health details as held by Oasys
      operationId: getHealth
      parameters:
        - name: prisonNumber
          in: path
          description: Prison nomis identifier
          example: "A1234AA"
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '_schemas.yml#/components/schemas/Health'
        401:
          description: Unauthorised. The request was unauthorised.
        403:
          description: Forbidden.  The client is not authorised to access person.
        404:
          $ref: '_shared.yml#/components/responses/404InvalidPrisonNumberResponse'

  /oasys/{prisonNumber}/learning-needs:
    get:
      tags:
        - Oasys Integration
      summary: Learning needs details as held by Oasys
      operationId: getLearningNeeds
      parameters:
        - name: prisonNumber
          in: path
          description: Prison nomis identifier
          example: "A1234AA"
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '_schemas.yml#/components/schemas/LearningNeeds'
        401:
          description: Unauthorised. The request was unauthorised.
        403:
          description: Forbidden.  The client is not authorised to access person.
        404:
          $ref: '_shared.yml#/components/responses/404InvalidPrisonNumberResponse'

  /oasys/{prisonNumber}/risks-and-alerts:
    get:
      tags:
        - Oasys Integration
      summary: Risks details as held by Oasys
      operationId: getRisks
      parameters:
        - name: prisonNumber
          in: path
          description: Prison nomis identifier
          example: "A1234AA"
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '_schemas.yml#/components/schemas/Risks'
        401:
          description: Unauthorised. The request was unauthorised.
        403:
          description: Forbidden.  The client is not authorised to access person.
        404:
          $ref: '_shared.yml#/components/responses/404InvalidPrisonNumberResponse'

  /oasys/{prisonNumber}/drug-and-alcohol-details:
    get:
      summary: Get drug and alcohol assessment details
      description: Retrieves the drug and alcohol assessment details for a given prison number
      tags:
        - Oasys Integration
      operationId: getDrugAndAlcoholDetails
      parameters:
        - name: prisonNumber
          in: path
          description: Prison nomis identifier
          example: "A1234AA"
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '_schemas.yml#/components/schemas/DrugAlcoholDetail'
        401:
          description: Unauthorised. The request was unauthorised.
        403:
          description: Forbidden.  The client is not authorised to access person.
        404:
          $ref: '_shared.yml#/components/responses/404InvalidPrisonNumberResponse'

  /oasys/{prisonNumber}/assessment_date:
    get:
      summary: Get latest layer 3 completed assessment date
      description: Get latest layer 3 completed assessment date and if there are any open assessments
      tags:
        - Oasys Integration
      operationId: getLatestCompletedAssessmentDate
      parameters:
        - name: prisonNumber
          in: path
          description: Prison nomis identifier
          example: "A1234AA"
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '_schemas.yml#/components/schemas/OasysAssessmentDateInfo'
        401:
          description: Unauthorised. The request was unauthorised.
        403:
          description: Forbidden.  The client is not authorised to access person.
        404:
          $ref: '_shared.yml#/components/responses/404InvalidPrisonNumberResponse'

  /reference-data/referral-statuses:
    get:
      tags:
        - reference data
      summary: The referral status reference data
      operationId: getReferralStatuses
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "_schemas.yml#/components/schemas/ReferralStatusRefData"
        401:
          description: Unauthorised. The request was unauthorised.
        403:
          description: Forbidden.  The client is not authorised to access.

  /reference-data/referral-statuses/{code}:
    get:
      tags:
        - reference data
      summary: referral status reference data
      operationId: getReferralStatus
      parameters:
        - name: code
          in: path
          description: referral status code
          example: "WITHDRAWN"
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '_schemas.yml#/components/schemas/ReferralStatusRefData'
        401:
          description: Unauthorised. The request was unauthorised.
        403:
          description: Forbidden.  The client is not authorised to access.
        404:
          $ref: '_shared.yml#/components/responses/404RefDataNotFoundResponse'

  /reference-data/referral-statuses/{referralStatusCode}/categories:
    get:
      tags:
        - reference data
      summary: The referral status categories reference data for a referral status code
      operationId: getReferralStatusCategories
      parameters:
        - name: referralStatusCode
          in: path
          description: referral status code
          example: "WITHDRAWN"
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "_schemas.yml#/components/schemas/ReferralStatusCategory"
        401:
          description: Unauthorised. The request was unauthorised.
        403:
          description: Forbidden.  The client is not authorised to access.

  /reference-data/referral-statuses/categories/{code}:
    get:
      tags:
        - reference data
      summary: get a single referral status category
      operationId: getReferralStatusCategory
      parameters:
        - name: code
          in: path
          description: category code
          example: "ADMIN"
          required: true
          schema:
            type: string

      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '_schemas.yml#/components/schemas/ReferralStatusCategory'
        401:
          description: Unauthorised. The request was unauthorised.
        403:
          description: Forbidden.  The client is not authorised to access.
        404:
          $ref: '_shared.yml#/components/responses/404RefDataNotFoundResponse'

  /reference-data/referral-statuses/{referralStatusCode}/categories/{categoryCode}/reasons:
    get:
      tags:
        - reference data
      summary: The referral status reasons reference data for a referral status code
      operationId: getReferralStatusReasons
      parameters:
        - name: referralStatusCode
          in: path
          description: referral status code
          example: "WITHDRAWN"
          required: true
          schema:
            type: string
        - name: categoryCode
          in: path
          description: referral category code
          example: "ADMIN"
          required: true
          schema:
            type: string
        - name: deselectAndKeepOpen
          in: query
          description: flag for bespoke deselection option
          required: false
          schema:
            type: boolean
            default: false

      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "_schemas.yml#/components/schemas/ReferralStatusReason"
        401:
          description: Unauthorised. The request was unauthorised.
        403:
          description: Forbidden.  The client is not authorised to access.

  /reference-data/referral-statuses/categories/reasons/{code}:
    get:
      tags:
        - reference data
      summary: get a single referral status reason
      operationId: getReferralStatusReason
      parameters:
        - name: code
          in: path
          description: reason code
          example: "DUPLICATE"
          required: true
          schema:
            type: string

      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                $ref: '_schemas.yml#/components/schemas/ReferralStatusReason'
        401:
          description: Unauthorised. The request was unauthorised.
        403:
          description: Forbidden.  The client is not authorised to access.
        404:
          $ref: '_shared.yml#/components/responses/404RefDataNotFoundResponse'

  /organisations/enabled:
    get:
      tags:
        - reference data
      summary: Get list of enabled organisations
      operationId: getEnabledOrganisations
      responses:
        200:
          description: List of enabled organisations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '_schemas.yml#/components/schemas/EnabledOrganisation'
        401:
          description: Unauthorised. The request was unauthorised.
        403:
          description: Forbidden.  The client is not authorised to access.

  /organisations:
    get:
      tags:
        - Organisation
      summary: Get all organisations
      description: Returns a list of organisations with their ID and name
      operationId: getOrganisations
      responses:
        '200':
          description: Successfully retrieved list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '_schemas.yml#/components/schemas/Organisation'
        '401':
          description: You are not authorized to view the resource
        '403':
          description: Accessing the resource you were trying to reach is forbidden
        '404':
          description: The resource you were trying to reach is not found

  /user/me/caseload:
    get:
      summary: Get list of caseloads for current user
      operationId: getCurrentUserCaseloads
      parameters:
        - name: allCaseloads
          in: query
          description: Flag to indicate whether to retrieve all caseloads or not. Set to false by default
          schema:
            type: boolean
            default: false
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '_schemas.yml#/components/schemas/CaseLoad'
                type: array
          description: Retrieves the caseloads associated with the authenticated user.
        "401":
          description: Unauthorised. The request was unauthorised.
        "403":
          description: Forbidden.  The client is not authorised to access.
      tags:
        - User
