openapi: 3.0.1
info:
  title: Accredited Programmes API
  version: 1.0.0
servers:
  - url: /
paths:
  /courses:
    get:
      tags:
        - Courses
      summary: List all courses
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
    put:
      tags:
        - Courses bulk upload / replace
      summary: Upload a CSV format file containing a full set of Courses data.
      requestBody:
        required: true
        content:
          'text/csv;charset=UTF-8':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CourseRecord'
      responses:
        204:
          description: Successful update
        400:
          description: Bad input

  /courses/prerequisites:
    put:
      tags:
        - Course prerequisites bulk upload / replace
      summary: Upload a CSV format file containing a full set of prerequisites data for the current set of courses.
      description: "Accepts a CSV format file of data representing the desired state of all prerequisite data attached to the current set of courses.
      <p>Pre-existing prerequisite data will be removed before the new data is applied.
      <p>The first row of CSV data is treated as a header row.  The column headings in the header row must much the names of the fields in the PrerequisiteRecord schema. Column order is not important."
      requestBody:
        required: true
        content:
          'text/csv;charset=UTF-8':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/PrerequisiteRecord'
      responses:
        200:
          description: Successful update
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LineMessage'

        400:
          description: Bad input
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /courses/{courseId}:
    get:
      tags:
        - Courses
      summary: Details for a single course
      parameters:
        - name: courseId
          in: path
          description: A course identifier
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                  $ref: '#/components/schemas/Course'

  /courses/offerings:
    put:
      tags:
        - Course offerings bulk upload / replace
      summary: Upload a CVS format file containing a full set of offerings data for a set of courses.
      description: "Accepts a CSV format file of data representing the desired state of all offerings data attached to the current set of courses.
      <p>Pre-existing offering data will be removed before the new data is applied.
      <p>The first row of CSV data is treated as a header row.  The column headings in the header row must much the names of the fields in the OfferingRecord schema. Column order is not important."
      requestBody:
        required: true
        content:
          'text/csv;charset=UTF-8':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OfferingRecord'
      responses:
        204:
          description: Successful update
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LineMessage'
        400:
          description: Bad input
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'


  /courses/{courseId}/offerings:
    get:
      tags:
        - Course Offerings
      summary: List all offerings for a course
      parameters:
        - name: courseId
          in: path
          description: A course identifier
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CourseOffering'

  /courses/{courseId}/offerings/{offeringId}:
    get:
      tags:
        - Course Offering
      summary: Details for a single course offering

      parameters:
        - name: courseId
          in: path
          description: A course identifier
          required: true
          schema:
            type: string
            format: uuid

        - name: offeringId
          in: path
          description: A course offering identifier
          required: true
          schema:
            type: string
            format: uuid

      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                  $ref: '#/components/schemas/CourseOffering'
        404:
          description: invalid course and/or course offering id
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /referrals:
    post:
      tags:
        - Referrals
      summary: Start a referral
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/StartReferral'
      responses:
        201:
          description: Started referral
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ReferralStarted'

  /referrals/{id}:
    get:
      tags:
        - Referrals
      summary: Retrieve a referral
      parameters:
        - name: id
          in: path
          description: The id (UUID) of a referral
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Information about the referral
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Referral'
        404:
          description: No referral has the supplied id (Not Found)

  /offerings/{id}/course:
    get:
      tags:
        - Courses
      summary: Retrieve the course that owns an offering
      parameters:
        - name: id
          in: path
          description: The id (UUID) of an offering
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Information about the Course that owns the offering
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Course'
        404:
          description: No offering has the supplied id (Not Found)

components:
  schemas:
    Course:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: Thinking skills programme
        description:
          type: string
          example: Thinking Skills Programme (TSP) description
        alternateName:
          type: string
          example: 'BNM+'
        coursePrerequisites:
          type: array
          items:
            $ref: '#/components/schemas/CoursePrerequisite'
        audiences:
          type: array
          items:
            $ref: '#/components/schemas/CourseAudience'
      required:
        - id
        - name
        - coursePrerequisites
        - audiences

    CourseRecord:
      title: 'CourseRecord'
      type: object
      properties:
        name:
          type: string
        alternateName:
          type: string
        identifier:
          type: string
        description:
          type: string
        audience:
          type: string
        comments:
          type: string
      required:
        - name
        - identifier
        - description
        - audience

    CoursePrerequisite:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
      example:
        - name: gender
          description: female
        - name: risk score
          description: 'ORGS: 50+'
        - name: offence type
          description: some offence here
      required:
        - name
        - description

    PrerequisiteRecord:
      type: object
      title: 'PrerequisiteRecord'
      properties:
        name:
          type: string
          example: "age"
          description: "The name of this Course Prerequisite"
        description:
          type: string
          example: "18+"
          description: "The value of this Course Prerequisite"
        course:
          type: string
          example: "Kaizen"
          description: "The name of the Course to which this Prerequisite applies. The name must match a course name exactly for this Prerequisite to be added to the Course."
        identifier:
          type: string
          example: "BNM-IPVO"
        comments:
          type: string
      required:
        - name
        - course
        - identifier

    CourseOffering:
      type: object
      properties:
        id:
          type: string
          format: uuid
        organisationId:
          type: string
          example: "MDI"
          description: "The unique identifier associated with the location hosting the offering. For prisons this is the PrisonId which is usually three capital letters."
        contactEmail:
          type: string
          format: email
          example: "ap-admin@digital.justice.gov.uk"
          description: "The email address of a contact for this offering"
        secondaryContactEmail:
          type: string
          format: email
          example: "ap-admin-2@digital.justice.gov.uk"
          description: "An optional secondary email address of a contact for this offering"

      required:
        - id
        - organisationId
        - contactEmail

    OfferingRecord:
      type: object
      title: 'OfferingRecord'
      properties:
        course:
          type: string
          example: "Kaizen"
          description: "The name of the Course to which this Offering applies. The name must match a course name exactly for this Offering to be added to the Course."
        identifier:
          type: string
          example: "BNM-IPVO"
        organisation:
          type: string
        "contact email":
          type: string
          format: email
          example: "ap-admin@digital.justice.gov.uk"
          description: "The email address of the contact for this offering"
        "secondary contact email":
          type: string
          format: email
          example: "ap-admin2@digital.justice.gov.uk"
          description: "An optional secondary email address of a contact for this offering"
        prisonId:
          type: string
          example: "MDI"
          description: "The prison id for the prison associated with this Offering. This is usually three capital letters"
      required:
        - course
        - prisonId
        - identifier

    CourseAudience:
      type: object
      properties:
        value:
          type: string
          example: "General Violence"
        id:
          type: string
          format: uuid
      required:
        - id
        - value

    LineMessage:
      description: "warnings and errors for a line in an uploaded CSV file."
      type: object
      properties:
        lineNumber:
          type: integer
          example: 20
          description: "The number of the line in the CSV file that was rejected. The header line is lineNumber 1, the first line of CSV data is lineNumber 2."
        level:
          type: string
          enum:
            - Warning
            - Error
          description: "One of 'Error' or 'Warning'.  If a line has an Error then the data was not added. If it is a Warning then the line was added but there was a problem that should be corrected."
        message:
          type: string
          example: "No match for course 'Kaizen', prisonId 'BWI'"
          description: "Useful information about the Error or Warning."

    ErrorResponse:
      type: object
      properties:
        status:
          type: integer
          example: 404
        errorCode:
          type: integer
        userMessage:
          type: string
          example: "Course not found"
        developerMessage:
          type: string
        moreInfo:
          type: string
      required:
        - status

    StartReferral:
      type: object
      properties:
        offeringId:
          description: The id (UUID) of an active offering
          type: string
          format: uuid
        prisonNumber:
          description: The prison number of the person who is being referred
          example: "A1234AA"
          type: string
        referrerId:
          type: string
      required:
        - offeringId
        - prisonNumber
        - referrerId

    ReferralStarted:
      type: object
      properties:
        referralId:
          description: The unique id (UUID) of the new referral.
          type: string
          format: uuid
      required:
        - referralId

    Referral:
      type: object
      properties:
        id:
          description: The unique id (UUID) of this referral.
          type: string
          format: uuid
        offeringId:
          description: The id (UUID) of an active offering
          type: string
          format: uuid
        prisonNumber:
          description: The prison number of the person who is being referred
          example: "A1234AA"
          type: string
        referrerId:
          description: A permanent identifier for the person creating the referral. StaffId for prison staff
          type: string
        reason:
          type: string
        oasysConfirmed:
          type: boolean
          default: false
        status:
          type: string
          enum:
            - REFERRAL_STARTED
            - REFERRAL_SUBMITTED
            - AWAITING_ASSESSMENT
            - ASSESSMENT_STARTED
      required:
        - id
        - offeringId
        - prisonNumber
        - referrerId
        - oasysConfirmed
        - status
