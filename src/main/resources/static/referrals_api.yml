openapi: 3.0.1
info:
  title: Accredited Programmes API
  version: 1.0.0
servers:
  - url: /referrals
security:
  - bearerAuth: [ ]
paths:
  /:
    post:
      tags:
        - Referrals
      summary: Start a referral
      operationId: createReferral
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/ReferralCreate'
      responses:
        201:
          description: Started referral
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ReferralCreated'
        400:
          description: Bad input
          content:
            'application/json':
              schema:
                $ref: '_shared.yml#/components/schemas/ErrorResponse'
        401:
          description: Unauthorised. The request was unauthorised.

    get:
      summary: Retrieve some referrals
      operationId: getReferrals
      tags:
        - Referrals
      parameters:
        - name: status
          in: query
          description: If present, only return referrals in the given state
          required: false
          schema:
            type: string
        - name: offeringId
          in: query
          description: The id (UUID) of an active offering. If present, only return referrals for that offering.
          required: false
          schema:
            type: string
            format: uuid
        - name: prisonNumber
          in: query
          description: The prison number of the person who is being referred. If present, only return referrals for the person.
          example: "A1234AA"
          required: false
          schema:
            type: string
      responses:
        200:
          description: Returns information about matching referrals
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Referral'
        401:
          description: The request was unauthorised
        403:
          description: Forbidden.  The client is not authorised to access referrals.

  /{id}:
    get:
      tags:
        - Referrals
      summary: Retrieve a referral
      operationId: getReferralById
      parameters:
        - name: id
          in: path
          description: The id (UUID) of a referral
          required: true
          schema:
            type: string
            format: uuid
        - name: updatePerson
          in: query
          description: parameter to decide whether to update the local person data
          required: false
          schema:
            type: boolean
            default: false
      responses:
        200:
          description: Information about the referral
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Referral'
        401:
          description: The request was unauthorised
        403:
          description: Forbidden.  The client is not authorised to access this referral.
        404:
          description: The referral does not exist

    put:
      tags:
        - Referrals
      summary: Update a referral
      operationId: updateReferralById
      parameters:
        - name: id
          in: path
          description: The id (UUID) of a referral
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: "#/components/schemas/ReferralUpdate"
      responses:
        204:
          description: The referral was updated
        401:
          description: The request was unauthorised
        403:
          description: Forbidden.  The client is not authorised to access this referral.
        404:
          description: The referral does not exist

    delete:
      summary: Delete a draft referral
      description: Deletes a draft referral by its ID.
      operationId: deleteReferralById
      tags:
        - Referrals
      parameters:
        - name: id
          in: path
          description: The id (UUID) of a referral
          required: true
          schema:
            type: string
            format: uuid
      responses:
        204:
          description: No Content - The referral was successfully deleted
        401:
          description: The request was unauthorised
        403:
          description: Not authorised to access this endpoint/these referrals
        404:
          description: No referrals for supplied organisationId (Not Found).

  /{id}/status-transitions:
    get:
      tags:
        - Referrals
      summary: Retrieve the next available status transitions for a referral
      operationId: getNextStatusTransitions
      parameters:
        - name: id
          in: path
          description: The id (UUID) of a referral
          required: true
          schema:
            type: string
            format: uuid
        - name: ptUser
          in: query
          description: is the user a Programme Team user
          required: false
          schema:
            type: boolean
            default: false
        - name: deselectAndKeepOpen
          in: query
          description: flag for bespoke deselection option
          required: false
          schema:
            type: boolean
            default: false
      responses:
        200:
          description: The list of statuses a referral can move on to
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '_shared.yml#/components/schemas/ReferralStatusRefData'
        401:
          description: The request was unauthorised
        403:
          description: Forbidden.  The client is not authorised to access this referral.
        404:
          description: The referral does not exist

  /{id}/confirmation-text/{chosenStatusCode}:
    get:
      tags:
        - Referrals
      summary: Endpoint to present the UI with the appropriate text for the status change chosen.
      operationId: getConfirmationText
      parameters:
        - name: id
          in: path
          description: The id (UUID) of a referral
          required: true
          schema:
            type: string
            format: uuid
        - name: chosenStatusCode
          in: path
          description: The status code that was chosen
          required: true
          schema:
            type: string
        - name: ptUser
          in: query
          description: is the user a Programme Team user
          required: false
          schema:
            type: boolean
            default: false
        - name: deselectAndKeepOpen
          in: query
          description: flag for bespoke deselection option
          required: false
          schema:
            type: boolean
            default: false
      responses:
        200:
          description: The screen fields for the confirmation page
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ConfirmationFields'
        401:
          description: The request was unauthorised
        403:
          description: Forbidden.  The client is not authorised to access this referral.
        404:
          description: The referral does not exist

  /{id}/status:
    put:
      summary: Change a referral's status
      tags:
        - Referrals
      operationId: updateReferralStatusById
      parameters:
        - name: id
          in: path
          description: The id (UUID) of a referral
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/ReferralStatusUpdate'
      responses:
        204:
          description: The referral now has the requested status.
        401:
          description: The request was unauthorised.
        403:
          description: Forbidden.  The client is not authorised to access this referral.
        404:
          description: The referral does not exist.
        409:
          description: The referral may not change its status to the supplied value.

  /{id}/submit:
    post:
      summary: Submit a completed referral
      tags:
        - Referrals
      operationId: submitReferralById
      parameters:
        - name: id
          in: path
          description: The id (UUID) of a referral
          required: true
          schema:
            type: string
            format: uuid
      responses:
        204:
          description: Submitted a completed referral.
        401:
          description: The request was unauthorised.
        403:
          description: Forbidden. The client is not authorised to access this referral.
        404:
          description: The referral does not exist.

  /{id}/status-history:
    get:
      tags:
        - Referrals
      summary: Returns the referral status history for this referral
      operationId: statusHistory
      parameters:
        - name: id
          in: path
          description: The id (UUID) of a referral
          required: true
          schema:
            type: string
            format: uuid
        - name: updatePerson
          in: query
          description: parameter to decide whether to update the local person data
          required: false
          schema:
            type: boolean
            default: false
      responses:
        201:
          description: A list of status history
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReferralStatusHistory'
        400:
          description: Bad input
          content:
            'application/json':
              schema:
                $ref: '_shared.yml#/components/schemas/ErrorResponse'
        401:
          description: The client is not authorized to perform this operation.
          content:
            'application/json':
              schema:
                $ref: '_shared.yml#/components/schemas/ErrorResponse'

  /view/organisation/{organisationId}/dashboard:
    get:
      summary: Get paginated referrals by organisationId
      tags:
        - Referrals
      operationId: getReferralViewsByOrganisationId
      parameters:
        - name: organisationId
          in: path
          description: The organisationId of an organisation
          required: true
          schema:
            type: string
        - name: nameOrId
          in: query
          description: 'The persons name: forename surname or surname or prison number. Name wll be a case insensitive like search. 
                    For example entering John will return people with the forename or surname containing the name john like johnathan.
                    If two names are given then the assumption is that they are forename and surname. And if there is a single term that matches 
                    the regex for a prison number then only an exact prison number match will be carried out'
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: Page number of the requested page
          required: false
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            default: 10
        - name: status
          in: query
          description: Filter by the status of the referral
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: audience
          in: query
          description: Filter by the audience of the referral
          required: false
          schema:
            type: string
        - name: courseName
          in: query
          description: Filter by the name of the course associated with this referral
          required: false
          schema:
            type: string
        - name: statusGroup
          in: query
          description: Additional filter to only show "open", "closed" or "draft" referrals
          required: false
          schema:
            type: string
        - name: sortColumn
          in: query
          description: Column to sort by default "surname"
          required: false
          schema:
            type: string
        - name: sortDirection
          in: query
          description: Direction to sort by [ascending/descending] default "ascending"
          required: false
          schema:
            type: string
      responses:
        200:
          description: Paginated summary of referrals for an organisation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PaginatedReferralView'
        401:
          description: The request was unauthorised
        403:
          description: Not authorised to access this endpoint/these referrals
        404:
          description: No referrals for supplied organisationId (Not Found).

  /view/me/dashboard:
    get:
      summary: Get paginated referrals for the current user
      tags:
        - Referrals
      operationId: getReferralViewsByCurrentUser
      parameters:
        - name: page
          in: query
          description: Page number of the requested page
          required: false
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            default: 10
        - name: nameOrId
          in: query
          description: 'The persons name: forename surname or surname or prison number. Name wll be a case insensitive like search. 
                    For example entering John will return people with the forename or surname containing the name john like johnathan.
                    If two names are given then the assumption is that they are forename and surname. And if there is a single term that matches 
                    the regex for a prison number then only an exact prison number match will be carried out'
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: Filter by the status of the referral
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: audience
          in: query
          description: Filter by the audience of the referral
          required: false
          schema:
            type: string
        - name: courseName
          in: query
          description: Filter by the name of the course associated with this referral
          required: false
          schema:
            type: string
        - name: statusGroup
          in: query
          description: Additional filter to only show "open", "closed" or "draft" referrals
          required: false
          schema:
            type: string
        - name: sortColumn
          in: query
          description: Column to sort by default "surname"
          required: false
          schema:
            type: string
        - name: sortDirection
          in: query
          description: Direction to sort by [ascending/descending] default "ascending"
          required: false
          schema:
            type: string
      responses:
        200:
          description: Paginated summary of referrals for an organisation
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PaginatedReferralView'
        401:
          description: The request was unauthorised
        403:
          description: Not authorised to access this endpoint/these referrals
        404:
          description: No referrals for supplied organisationId (Not Found).

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    
    ReferralCreate:
      type: object
      properties:
        offeringId:
          description: The id (UUID) of an active offering
          type: string
          format: uuid
        prisonNumber:
          description: The prison number of the person who is being referred.
          example: "A1234AA"
          type: string
      required:
        - offeringId
        - prisonNumber

    ReferralUpdate:
      type: object
      properties:
        additionalInformation:
          type: string
        oasysConfirmed:
          type: boolean
          default: false
        hasReviewedProgrammeHistory:
          type: boolean
          default: false
      required:
        - oasysConfirmed
        - hasReviewedProgrammeHistory

    Referral:
      allOf:
        - $ref: "#/components/schemas/ReferralCreate"
        - $ref: "#/components/schemas/ReferralUpdate"
        - type: object
          properties:
            id:
              description: The unique id (UUID) of this referral.
              type: string
              format: uuid
            status:
              description: The status code of the referral.
              type: string
            closed:
              description: Is the status of the referral a closed one.
              type: boolean
            statusDescription:
              description: The status description.
              type: string
            statusColour:
              description: The colour to display status description.
              type: string
            referrerUsername:
              type: string
            submittedOn:
              type: string
          required:
            - id
            - offeringId
            - prisonNumber
            - referrerUsername
            - oasysConfirmed
            - status

    ReferralCreated:
      type: object
      properties:
        referralId:
          description: The unique id (UUID) of the new referral.
          type: string
          format: uuid
      required:
        - referralId

    ReferralStatusUpdate:
      type: object
      properties:
        status:
          type: string
        category:
          type: string
        reason:
          type: string
        notes:
          type: string
        ptUser:
          type: boolean
          description: is the user a pt user
          default: false
      required:
        - status

    PaginatedReferralView:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ReferralView'
        totalPages:
          type: integer
        totalElements:
          type: integer
        pageSize:
          type: integer
        pageNumber:
          type: integer
        pageIsEmpty:
          type: boolean

    ReferralView:
      type: object
      properties:
        id:
          description: The unique id (UUID) of the new referral.
          type: string
          format: uuid
        referrerUsername:
          description: The unique HMPPS username of the user who created this referral.
          type: string
        courseName:
          type: string
        audience:
          type: string
          example: 'Gang offence'
        status:
          type: string
        statusDescription:
          description: The status description.
          type: string
        statusColour:
          description: The colour to display status description.
          type: string
        submittedOn:
          type: string
          format: date-time
          description: Date referral was submitted.
        prisonNumber:
          type: string
        organisationName:
          type: string
          description: Name of the organisation
        organisationId:
          type: string
          description: ID of the organisation
        conditionalReleaseDate:
          type: string
          format: date
          description: Conditional release date.
        paroleEligibilityDate:
          type: string
          format: date
          description: Parole eligibility date.
        tariffExpiryDate:
          type: string
          format: date
          description: Tariff expiry date.
        earliestReleaseDate:
          type: string
          format: date
          description: Earliest release date, if applicable, to this individual. Derived from Sentence information.
        earliestReleaseDateType:
          type: string
          description: Earliest release date type used
        nonDtoReleaseDateType:
          type: string
          description: Release date type
        forename:
          type: string
          description: forename of the person
        surname:
          type: string
          description: surname of the person
        sentenceType:
          type: string
          description: Sentence type description or 'Multiple sentences' if there are more than one
        listDisplayName:
          type: string
          description: The course display name when it is in a list.
        location:
          type: string
          description: location of person

    ReferralStatusHistory:
      type: object
      properties:
        id:
          description: The id (UUID) of the status history record.
          type: string
          format: uuid
        referralId:
          description: The unique id (UUID) of the referral.
          type: string
          format: uuid
        status:
          description: The status of the referral.
          type: string
        statusDescription:
          description: The status description.
          type: string
        statusColour:
          description: The colour to display status description.
          type: string
        previousStatus:
          description: The previous status of the referral.
          type: string
        previousStatusDescription:
          description: The previous status description.
          type: string
        previousStatusColour:
          description: The previous colour to display status description.
          type: string
        notes:
          description: The notes associated with the status change.
          type: string
        statusStartDate:
          type: string
          format: date-time
          description: Date referral was changed to this status.
        username:
          type: string
          description: Username of the person who changed to this status

    ConfirmationFields:
      type: object
      properties:
        primaryHeading:
          type: string
          example: Move referral to awaiting assessment
        primaryDescription:
          type: string
          example: Submitting this will change the status to awaiting assessment.
        secondaryHeading:
          type: string
          example: Give a reason
        secondaryDescription:
          type: string
          example: You must give a reason why this referral is being moved to suitable but not ready.
        warningText:
          type: string
          example: Submitting this will pause the referral
        hasConfirmation:
          type: boolean
          default: false
        notesOptional:
          type: boolean
          default: false