package uk.gov.justice.digital.hmpps.hmppsaccreditedprogrammesapi.restapi

import uk.gov.justice.digital.hmpps.hmppsaccreditedprogrammesapi.LoremIpsum
import uk.gov.justice.digital.hmpps.hmppsaccreditedprogrammesapi.api.model.PrerequisiteRecord
import uk.gov.justice.digital.hmpps.hmppsaccreditedprogrammesapi.domain.NewCourse
import uk.gov.justice.digital.hmpps.hmppsaccreditedprogrammesapi.domain.NewOffering
import java.io.ByteArrayInputStream
import java.io.InputStream

private fun newCourse(name: String, identifier: String = "", audience: String, alternateName: String? = null) =
  NewCourse(name = name, identifier = identifier, alternateName = alternateName, audience = audience, description = LoremIpsum.words(1..10))

object CsvTestData {
  val newCourses: List<NewCourse> =
    listOf(
      newCourse(name = "Becoming New Me Plus", identifier = "BNM+-SO", audience = "Sexual offence, Intimate partner violence, Non-intimate partner violence", alternateName = "BNM+"),
      newCourse(name = "Building Better Relationships", identifier = "BBR-IPVO", audience = "Intimate partner violence ", alternateName = "BBR"),
      newCourse(name = "Healthy Identity Intervention", identifier = "HI-EO", audience = "Extremism offence", alternateName = "HI"),
      newCourse(name = "Healthy Sex Programme", identifier = "HSP-SO", audience = "Sexual offence", alternateName = "HSP"),
      newCourse(name = "Horizon", identifier = "H-SO", audience = "Sexual offence", alternateName = ""),
      newCourse(name = "iHorizon", identifier = "iH-SO", audience = "Sexual offence", alternateName = ""),
      newCourse(name = "Identity Matters", identifier = "IM-GO", audience = "Gang offence, Extremism offence", alternateName = "IM"),
      newCourse(name = "Kaizen", identifier = "K-VO", audience = "Violent offence", alternateName = ""),
      newCourse(name = "Kaizen", identifier = "K-IPVO", audience = "Intimate partner violence", alternateName = ""),
      newCourse(name = "Kaizen", identifier = "K-SO", audience = "Sexual offence", alternateName = ""),
      newCourse(name = "Living as New Me (custody)", identifier = "LNM-VO", audience = "Violent offence, Sexual offence, Intimate partner violence ", alternateName = "LNM"),
      newCourse(name = "Living as New Me (community)", identifier = "LNM-SO", audience = "Sexual offence", alternateName = "LNM"),
      newCourse(name = "Motivation and Engagement", identifier = "M&E-VO", audience = "Violent offence, Sexual offence, Intimate partner violence ", alternateName = "M&E"),
      newCourse(name = "New Me MOT", identifier = "NMM-VO", audience = "Violent offence, Sexual offence, Intimate partner violence ", alternateName = "NMM"),
      newCourse(name = "New Me Strengths", identifier = "NMS-VO", audience = "Violent offence, Sexual offence, Intimate partner violence ", alternateName = "NMS"),
    )

  val prerequisiteRecords: List<PrerequisiteRecord> by lazy {
    listOf(
      PrerequisiteRecord(name = "gender", course = "Becoming New Me Plus"),
      PrerequisiteRecord(name = "age", course = "Becoming New Me Plus"),
      PrerequisiteRecord(name = "risk score", course = "Becoming New Me Plus"),
      PrerequisiteRecord(name = "risk score", course = "Becoming New Me Plus"),
      PrerequisiteRecord(name = "risk score", course = "Becoming New Me Plus"),
      PrerequisiteRecord(name = "setting", course = "Becoming New Me Plus"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Becoming New Me Plus"),
      PrerequisiteRecord(name = "", course = "Becoming New Me Plus"),
      PrerequisiteRecord(name = "need requirements", course = "Becoming New Me Plus"),
      PrerequisiteRecord(name = "criminogenic needs", course = "Becoming New Me Plus"),
      PrerequisiteRecord(name = "criminogenic needs", course = "Becoming New Me Plus"),
      PrerequisiteRecord(name = "gender", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "age", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "risk score", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "risk score", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "setting", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "criminogenic needs", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "criminogenic needs", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "criminogenic needs", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "criminogenic needs", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "gender", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "age", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "risk score", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "risk score", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "setting", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "criminogenic needs", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "criminogenic needs", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "criminogenic needs", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "criminogenic needs", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "gender", course = "Healthy Identity Intervention (Custody)"),
      PrerequisiteRecord(name = "gender", course = "Healthy Identity Intervention (Custody)"),
      PrerequisiteRecord(name = "age", course = "Healthy Identity Intervention (Custody)"),
      PrerequisiteRecord(name = "risk score", course = "Healthy Identity Intervention (Custody)"),
      PrerequisiteRecord(name = "setting", course = "Healthy Identity Intervention (Custody)"),
      PrerequisiteRecord(name = "setting", course = "Healthy Identity Intervention (Custody)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Healthy Identity Intervention (Custody)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Healthy Identity Intervention (Custody)"),
      PrerequisiteRecord(name = "need requirements", course = "Healthy Identity Intervention (Custody)"),
      PrerequisiteRecord(name = "need requirements", course = "Healthy Identity Intervention (Custody)"),
      PrerequisiteRecord(name = "need requirements", course = "Healthy Identity Intervention (Custody)"),
      PrerequisiteRecord(name = "gender", course = "Healthy Identity Intervention (Community)"),
      PrerequisiteRecord(name = "gender", course = "Healthy Identity Intervention (Community)"),
      PrerequisiteRecord(name = "age", course = "Healthy Identity Intervention (Community)"),
      PrerequisiteRecord(name = "risk score", course = "Healthy Identity Intervention (Community)"),
      PrerequisiteRecord(name = "setting", course = "Healthy Identity Intervention (Community)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Healthy Identity Intervention (Community)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Healthy Identity Intervention (Community)"),
      PrerequisiteRecord(name = "need requirements", course = "Healthy Identity Intervention (Community)"),
      PrerequisiteRecord(name = "need requirements", course = "Healthy Identity Intervention (Community)"),
      PrerequisiteRecord(name = "need requirements", course = "Healthy Identity Intervention (Community)"),
      PrerequisiteRecord(name = "gender", course = "Healthy Sex Programme"),
      PrerequisiteRecord(name = "age", course = "Healthy Sex Programme"),
      PrerequisiteRecord(name = "risk score", course = "Healthy Sex Programme"),
      PrerequisiteRecord(name = "setting", course = "Healthy Sex Programme"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Healthy Sex Programme"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Healthy Sex Programme"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Healthy Sex Programme"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Healthy Sex Programme"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Healthy Sex Programme"),
      PrerequisiteRecord(name = "need requirements", course = "Healthy Sex Programme"),
      PrerequisiteRecord(name = "need requirements", course = "Healthy Sex Programme"),
      PrerequisiteRecord(name = "criminogenic needs", course = "Healthy Sex Programme"),
      PrerequisiteRecord(name = "gender", course = "Horizon (Custody)"),
      PrerequisiteRecord(name = "age", course = "Horizon (Custody)"),
      PrerequisiteRecord(name = "risk score", course = "Horizon (Custody)"),
      PrerequisiteRecord(name = "setting", course = "Horizon (Custody)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Horizon (Custody)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Horizon (Custody)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Horizon (Custody)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Horizon (Custody)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Horizon (Custody)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Horizon (Custody)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Horizon (Custody)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Horizon (Custody)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Horizon (Custody)"),
      PrerequisiteRecord(name = "need requirements", course = "Horizon (Custody)"),
      PrerequisiteRecord(name = "need requirements", course = "Horizon (Custody)"),
      PrerequisiteRecord(name = "need requirements", course = "Horizon (Custody)"),
      PrerequisiteRecord(name = "gender", course = "Horizon (Community)"),
      PrerequisiteRecord(name = "age", course = "Horizon (Community)"),
      PrerequisiteRecord(name = "risk score", course = "Horizon (Community)"),
      PrerequisiteRecord(name = "setting", course = "Horizon (Community)"),
      PrerequisiteRecord(name = "setting", course = "Horizon (Community)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Horizon (Community)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Horizon (Community)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Horizon (Community)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Horizon (Community)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Horizon (Community)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Horizon (Community)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Horizon (Community)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Horizon (Community)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Horizon (Community)"),
      PrerequisiteRecord(name = "need requirements", course = "Horizon (Community)"),
      PrerequisiteRecord(name = "need requirements", course = "Horizon (Community)"),
      PrerequisiteRecord(name = "need requirements", course = "Horizon (Community)"),
      PrerequisiteRecord(name = "criminogenic needs", course = "Horizon"),
      PrerequisiteRecord(name = "gender", course = "iHorizon"),
      PrerequisiteRecord(name = "age", course = "iHorizon"),
      PrerequisiteRecord(name = "risk score", course = "iHorizon"),
      PrerequisiteRecord(name = "setting", course = "iHorizon"),
      PrerequisiteRecord(name = "responsivity requirements", course = "iHorizon"),
      PrerequisiteRecord(name = "responsivity requirements", course = "iHorizon"),
      PrerequisiteRecord(name = "responsivity requirements", course = "iHorizon"),
      PrerequisiteRecord(name = "responsivity requirements", course = "iHorizon"),
      PrerequisiteRecord(name = "responsivity requirements", course = "iHorizon"),
      PrerequisiteRecord(name = "responsivity requirements", course = "iHorizon"),
      PrerequisiteRecord(name = "responsivity requirements", course = "iHorizon"),
      PrerequisiteRecord(name = "responsivity requirements", course = "iHorizon"),
      PrerequisiteRecord(name = "responsivity requirements", course = "iHorizon"),
      PrerequisiteRecord(name = "need requirements", course = "iHorizon"),
      PrerequisiteRecord(name = "need requirements", course = "iHorizon"),
      PrerequisiteRecord(name = "criminogenic needs", course = "iHorizon"),
      PrerequisiteRecord(name = "gender", course = "Identity Matters"),
      PrerequisiteRecord(name = "age", course = "Identity Matters"),
      PrerequisiteRecord(name = "risk score", course = "Identity Matters"),
      PrerequisiteRecord(name = "risk score", course = "Identity Matters"),
      PrerequisiteRecord(name = "setting", course = "Identity Matters"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Identity Matters"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Identity Matters"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Identity Matters"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Identity Matters"),
      PrerequisiteRecord(name = "criminogenic needs", course = "Identity Matters"),
      PrerequisiteRecord(name = "gender", course = "Kaizen (sexual offence)"),
      PrerequisiteRecord(name = "age", course = "Kaizen (sexual offence)"),
      PrerequisiteRecord(name = "risk score", course = "Kaizen (sexual offence)"),
      PrerequisiteRecord(name = "setting", course = "Kaizen (sexual offence)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Kaizen (sexual offence)"),
      PrerequisiteRecord(name = "need requirements", course = "Kaizen (sexual offence)"),
      PrerequisiteRecord(name = "criminogenic needs", course = "Kaizen (sexual offence)"),
      PrerequisiteRecord(name = "gender", course = "Kaizen (violent offence)"),
      PrerequisiteRecord(name = "age", course = "Kaizen (violent offence)"),
      PrerequisiteRecord(name = "risk score", course = "Kaizen (violent offence)"),
      PrerequisiteRecord(name = "setting", course = "Kaizen (violent offence)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Kaizen (violent offence)"),
      PrerequisiteRecord(name = "need requirements", course = "Kaizen (violent offence)"),
      PrerequisiteRecord(name = "criminogenic needs", course = "Kaizen (violent offence)"),
      PrerequisiteRecord(name = "gender", course = "Kaizen (intimate partner violence offence)"),
      PrerequisiteRecord(name = "age", course = "Kaizen (intimate partner violence offence)"),
      PrerequisiteRecord(name = "risk score", course = "Kaizen (intimate partner violence offence)"),
      PrerequisiteRecord(name = "setting", course = "Kaizen (intimate partner violence offence)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Kaizen (intimate partner violence offence)"),
      PrerequisiteRecord(name = "need requirements", course = "Kaizen (intimate partner violence offence)"),
      PrerequisiteRecord(name = "criminogenic needs", course = "Kaizen (intimate partner violence offence)"),
      PrerequisiteRecord(name = "gender", course = "Living as New Me"),
      PrerequisiteRecord(name = "age", course = "Living as New Me"),
      PrerequisiteRecord(name = "risk score", course = "Living as New Me"),
      PrerequisiteRecord(name = "setting", course = "Living as New Me"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Living as New Me"),
      PrerequisiteRecord(name = "need requirements", course = "Living as New Me"),
      PrerequisiteRecord(name = "criminogenic needs", course = "Living as New Me"),
      PrerequisiteRecord(name = "gender", course = "Living as New Me (Sexual offences)"),
      PrerequisiteRecord(name = "age", course = "Living as New Me (Sexual offences)"),
      PrerequisiteRecord(name = "risk score", course = "Living as New Me (Sexual offences)"),
      PrerequisiteRecord(name = "setting", course = "Living as New Me (Sexual offences)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Living as New Me (Sexual offences)"),
      PrerequisiteRecord(name = "need requirements", course = "Living as New Me (Sexual offences)"),
      PrerequisiteRecord(name = "criminogenic needs", course = "Living as New Me (Sexual offences)"),
      PrerequisiteRecord(name = "gender", course = "Motivation and Engagement"),
      PrerequisiteRecord(name = "gender", course = "Motivation and Engagement"),
      PrerequisiteRecord(name = "age", course = "Motivation and Engagement"),
      PrerequisiteRecord(name = "risk score", course = "Motivation and Engagement"),
      PrerequisiteRecord(name = "setting", course = "Motivation and Engagement"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Motivation and Engagement"),
      PrerequisiteRecord(name = "need requirements", course = "Motivation and Engagement"),
      PrerequisiteRecord(name = "criminogenic needs", course = "Motivation and Engagement"),
      PrerequisiteRecord(name = "gender", course = "New Me MOT"),
      PrerequisiteRecord(name = "age", course = "New Me MOT"),
      PrerequisiteRecord(name = "risk score", course = "New Me MOT"),
      PrerequisiteRecord(name = "setting", course = "New Me MOT"),
      PrerequisiteRecord(name = "responsivity requirements", course = "New Me MOT"),
      PrerequisiteRecord(name = "need requirements", course = "New Me MOT"),
      PrerequisiteRecord(name = "criminogenic needs", course = "New Me MOT"),
      PrerequisiteRecord(name = "gender", course = "New Me Strengths"),
      PrerequisiteRecord(name = "age", course = "New Me Strengths"),
      PrerequisiteRecord(name = "risk score", course = "New Me Strengths"),
      PrerequisiteRecord(name = "setting", course = "New Me Strengths"),
      PrerequisiteRecord(name = "responsivity requirements", course = "New Me Strengths"),
      PrerequisiteRecord(name = "need requirements", course = "New Me Strengths"),
      PrerequisiteRecord(name = "criminogenic needs", course = "New Me Strengths"),
      PrerequisiteRecord(name = "gender", course = "Thinking Skills Programme"),
      PrerequisiteRecord(name = "gender", course = "Thinking Skills Programme"),
      PrerequisiteRecord(name = "age", course = "Thinking Skills Programme"),
      PrerequisiteRecord(name = "risk score", course = "Thinking Skills Programme"),
      PrerequisiteRecord(name = "setting", course = "Thinking Skills Programme"),
      PrerequisiteRecord(name = "setting", course = "Thinking Skills Programme"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Thinking Skills Programme"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Thinking Skills Programme"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Thinking Skills Programme"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Thinking Skills Programme"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Thinking Skills Programme"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Thinking Skills Programme"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Thinking Skills Programme"),
      PrerequisiteRecord(name = "need requirements", course = "Thinking Skills Programme"),
      PrerequisiteRecord(name = "need requirements", course = "Thinking Skills Programme"),
      PrerequisiteRecord(name = "need requirements", course = "Thinking Skills Programme"),
      PrerequisiteRecord(name = "need requirements", course = "Thinking Skills Programme"),
      PrerequisiteRecord(name = "need requirements", course = "Thinking Skills Programme"),
      PrerequisiteRecord(name = "need requirements", course = "Thinking Skills Programme"),
      PrerequisiteRecord(name = "need requirements", course = "Thinking Skills Programme"),
      PrerequisiteRecord(name = "need requirements", course = "Thinking Skills Programme"),
      PrerequisiteRecord(name = "criminogenic needs", course = "Thinking Skills Programme"),
    ).map { it.copy(description = LoremIpsum.words(1..5), comments = LoremIpsum.words(0..20)) }
  }

  val offeringsRecords: List<NewOffering> =
    listOf(
      NewOffering(course = "Becoming New Me Plus ", prisonId = "AYI"),
      NewOffering(course = "Becoming New Me Plus ", prisonId = "BSI"),
      NewOffering(course = "Becoming New Me Plus ", prisonId = "EEI"),
      NewOffering(course = "Becoming New Me Plus ", prisonId = "FKI"),
      NewOffering(course = "Becoming New Me Plus ", prisonId = "SHI"),
      NewOffering(course = "Becoming New Me Plus ", prisonId = "SNI"),
      NewOffering(course = "Building Better Relationships", prisonId = "DGI"),
      NewOffering(course = "Building Better Relationships", prisonId = "EYI"),
      NewOffering(course = "Building Better Relationships", prisonId = "GTI"),
      NewOffering(course = "Building Better Relationships", prisonId = "OWI"),
      NewOffering(course = "Building Better Relationships", prisonId = "PYI"),
      NewOffering(course = "Building Better Relationships", prisonId = "PCI"),
      NewOffering(course = "Building Better Relationships", prisonId = "RHI"),
      NewOffering(course = "Building Better Relationships", prisonId = "MTI"),
      NewOffering(course = "Building Better Relationships", prisonId = "WLI"),
      NewOffering(course = "Building Better Relationships", prisonId = "WTI"),
      NewOffering(course = "Building Better Relationships", prisonId = "WMI"),
      NewOffering(course = "Healthy Identity Intervention", prisonId = "BAI"),
      NewOffering(course = "Healthy Identity Intervention", prisonId = "FKI"),
      NewOffering(course = "Healthy Identity Intervention", prisonId = "FNI"),
      NewOffering(course = "Healthy Identity Intervention", prisonId = "GHI"),
      NewOffering(course = "Healthy Identity Intervention", prisonId = "GTI"),
      NewOffering(course = "Healthy Identity Intervention", prisonId = "LLI"),
      NewOffering(course = "Healthy Identity Intervention", prisonId = "MRI"),
      NewOffering(course = "Healthy Identity Intervention", prisonId = "PRI"),
      NewOffering(course = "Healthy Identity Intervention", prisonId = "SLI"),
      NewOffering(course = "Healthy Identity Intervention", prisonId = "WDI"),
      NewOffering(course = "Healthy Identity Intervention", prisonId = "WRI"),
      NewOffering(course = "Healthy Identity Intervention", prisonId = "WHI"),
      NewOffering(course = "Healthy Sex Programme", prisonId = "ASI"),
      NewOffering(course = "Healthy Sex Programme", prisonId = "BNI"),
      NewOffering(course = "Healthy Sex Programme", prisonId = "BRI"),
      NewOffering(course = "Healthy Sex Programme", prisonId = "CWI"),
      NewOffering(course = "Healthy Sex Programme", prisonId = "DAI"),
      NewOffering(course = "Healthy Sex Programme", prisonId = "FKI"),
      NewOffering(course = "Healthy Sex Programme", prisonId = "HLI"),
      NewOffering(course = "Healthy Sex Programme", prisonId = "IWI"),
      NewOffering(course = "Healthy Sex Programme", prisonId = "LTI"),
      NewOffering(course = "Healthy Sex Programme", prisonId = "SFI"),
      NewOffering(course = "Healthy Sex Programme", prisonId = "UKI"),
      NewOffering(course = "Healthy Sex Programme", prisonId = "WDI"),
      NewOffering(course = "Healthy Sex Programme", prisonId = "WTI"),
      NewOffering(course = "Healthy Sex Programme", prisonId = "WMI"),
      NewOffering(course = "Horizon", prisonId = "ASI"),
      NewOffering(course = "Horizon", prisonId = "BNI"),
      NewOffering(course = "Horizon", prisonId = "BRI"),
      NewOffering(course = "Horizon", prisonId = "CWI"),
      NewOffering(course = "Horizon", prisonId = "DRI"),
      NewOffering(course = "Horizon", prisonId = "FKI"),
      NewOffering(course = "Horizon", prisonId = "GHI"),
      NewOffering(course = "Horizon", prisonId = "HLI"),
      NewOffering(course = "Horizon", prisonId = "IWI"),
      NewOffering(course = "Horizon", prisonId = "LTI"),
      NewOffering(course = "Horizon", prisonId = "MDI"),
      NewOffering(course = "Horizon", prisonId = "NLI"),
      NewOffering(course = "Horizon", prisonId = "RHI"),
      NewOffering(course = "Horizon", prisonId = "SFI"),
      NewOffering(course = "Horizon", prisonId = "SNI"),
      NewOffering(course = "Horizon", prisonId = "UKI"),
      NewOffering(course = "Horizon", prisonId = "WTI"),
      NewOffering(course = "Horizon", prisonId = "WHI"),
      NewOffering(course = "Identity Matters", prisonId = "AYI"),
      NewOffering(course = "Identity Matters", prisonId = "BAI"),
      NewOffering(course = "Identity Matters", prisonId = "DNI"),
      NewOffering(course = "Identity Matters", prisonId = "DGI"),
      NewOffering(course = "Identity Matters", prisonId = "FYI"),
      NewOffering(course = "Identity Matters", prisonId = "FKI"),
      NewOffering(course = "Identity Matters", prisonId = "FNI"),
      NewOffering(course = "Identity Matters", prisonId = "GHI"),
      NewOffering(course = "Identity Matters", prisonId = "GTI"),
      NewOffering(course = "Identity Matters", prisonId = "ISI"),
      NewOffering(course = "Identity Matters", prisonId = "LLI"),
      NewOffering(course = "Identity Matters", prisonId = "MRI"),
      NewOffering(course = "Identity Matters", prisonId = "SLI"),
      NewOffering(course = "Identity Matters", prisonId = "SNI"),
      NewOffering(course = "Identity Matters", prisonId = "MTI"),
      NewOffering(course = "Identity Matters", prisonId = "WRI"),
      NewOffering(course = "Identity Matters", prisonId = "WMI"),
      NewOffering(course = "Kaizen (sexual offences)", prisonId = "ASI"),
      NewOffering(course = "Kaizen (sexual offences)", prisonId = "BRI"),
      NewOffering(course = "Kaizen (sexual offences)", prisonId = "HLI"),
      NewOffering(course = "Kaizen (sexual offences)", prisonId = "IWI"),
      NewOffering(course = "Kaizen (sexual offences)", prisonId = "LTI"),
      NewOffering(course = "Kaizen (sexual offences)", prisonId = "RHI"),
      NewOffering(course = "Kaizen (sexual offences)", prisonId = "SFI"),
      NewOffering(course = "Kaizen (sexual offences)", prisonId = "SNI"),
      NewOffering(course = "Kaizen (sexual offences)", prisonId = "UKI"),
      NewOffering(course = "Kaizen (sexual offences)", prisonId = "WDI"),
      NewOffering(course = "Kaizen (sexual offences)", prisonId = "WTI"),
      NewOffering(course = "Kaizen (sexual offences)", prisonId = "WMI"),
      NewOffering(course = "Kaizen (intimate partner violence offences)", prisonId = "BWI"),
      NewOffering(course = "Kaizen (intimate partner violence offences)", prisonId = "EEI"),
      NewOffering(course = "Kaizen (intimate partner violence offences)", prisonId = "GTI"),
      NewOffering(course = "Kaizen (intimate partner violence offences)", prisonId = "HPI"),
      NewOffering(course = "Kaizen (intimate partner violence offences)", prisonId = "HHI"),
      NewOffering(course = "Kaizen (intimate partner violence offences)", prisonId = "SKI"),
      NewOffering(course = "Kaizen (intimate partner violence offences)", prisonId = "SLI"),
      NewOffering(course = "Kaizen (intimate partner violence offences)", prisonId = "WTI"),
      NewOffering(course = "Kaizen (intimate partner violence offences)", prisonId = "WHI"),
      NewOffering(course = "Kaizen (intimate partner violence offences)", prisonId = "WMI"),
      NewOffering(course = "Kaizen (violent offences)", prisonId = "AYI"),
      NewOffering(course = "Kaizen (violent offences)", prisonId = "BWI"),
      NewOffering(course = "Kaizen (violent offences)", prisonId = "DAI"),
      NewOffering(course = "Kaizen (violent offences)", prisonId = "DTI"),
      NewOffering(course = "Kaizen (violent offences)", prisonId = "DGI"),
      NewOffering(course = "Kaizen (violent offences)", prisonId = "FSI"),
      NewOffering(course = "Kaizen (violent offences)", prisonId = "FKI"),
      NewOffering(course = "Kaizen (violent offences)", prisonId = "FNI"),
      NewOffering(course = "Kaizen (violent offences)", prisonId = "GHI"),
      NewOffering(course = "Kaizen (violent offences)", prisonId = "GTI"),
      NewOffering(course = "Kaizen (violent offences)", prisonId = "HPI"),
      NewOffering(course = "Kaizen (violent offences)", prisonId = "HHI"),
      NewOffering(course = "Kaizen (violent offences)", prisonId = "LLI"),
      NewOffering(course = "Kaizen (violent offences)", prisonId = "LGI"),
      NewOffering(course = "Kaizen (violent offences)", prisonId = "MRI"),
      NewOffering(course = "Kaizen (violent offences)", prisonId = "PRI"),
      NewOffering(course = "Kaizen (violent offences)", prisonId = "RNI"),
      NewOffering(course = "Kaizen (violent offences)", prisonId = "SKI"),
      NewOffering(course = "Kaizen (violent offences)", prisonId = "SLI"),
      NewOffering(course = "Kaizen (violent offences)", prisonId = "SNI"),
      NewOffering(course = "Kaizen (violent offences)", prisonId = "WLI"),
      NewOffering(course = "Kaizen (violent offences)", prisonId = "WRI"),
      NewOffering(course = "Kaizen (violent offences)", prisonId = "WHI"),
      NewOffering(course = "Living as New Me ", prisonId = "BRI"),
      NewOffering(course = "Living as New Me ", prisonId = "HLI"),
      NewOffering(course = "Living as New Me ", prisonId = "IWI"),
      NewOffering(course = "Living as New Me ", prisonId = "WTI"),
      NewOffering(course = "New Me Strengths (intimate partner violence offences)", prisonId = "BWI"),
      NewOffering(course = "New Me Strengths (intimate partner violence offences)", prisonId = "BNI"),
      NewOffering(course = "New Me Strengths (intimate partner violence offences)", prisonId = "GMI"),
      NewOffering(course = "New Me Strengths (intimate partner violence offences)", prisonId = "HOI"),
      NewOffering(course = "New Me Strengths (intimate partner violence offences)", prisonId = "HMI"),
      NewOffering(course = "New Me Strengths (intimate partner violence offences)", prisonId = "PBI"),
      NewOffering(course = "New Me Strengths (intimate partner violence offences)", prisonId = "RSI"),
      NewOffering(course = "New Me Strengths (intimate partner violence offences)", prisonId = "SHI"),
      NewOffering(course = "New Me Strengths (intimate partner violence offences)", prisonId = "WLI"),
      NewOffering(course = "New Me Strengths (violent offences)", prisonId = "AYI"),
      NewOffering(course = "New Me Strengths (violent offences)", prisonId = "BWI"),
      NewOffering(course = "New Me Strengths (violent offences)", prisonId = "BSI"),
      NewOffering(course = "New Me Strengths (violent offences)", prisonId = "BNI"),
      NewOffering(course = "New Me Strengths (violent offences)", prisonId = "CWI"),
      NewOffering(course = "New Me Strengths (violent offences)", prisonId = "GHI"),
      NewOffering(course = "New Me Strengths (violent offences)", prisonId = "GMI"),
      NewOffering(course = "New Me Strengths (violent offences)", prisonId = "HOI"),
      NewOffering(course = "New Me Strengths (violent offences)", prisonId = "HMI"),
      NewOffering(course = "New Me Strengths (violent offences)", prisonId = "LGI"),
      NewOffering(course = "New Me Strengths (violent offences)", prisonId = "PRI"),
      NewOffering(course = "New Me Strengths (violent offences)", prisonId = "PBI"),
      NewOffering(course = "New Me Strengths (violent offences)", prisonId = "RSI"),
      NewOffering(course = "New Me Strengths (violent offences)", prisonId = "SHI"),
      NewOffering(course = "New Me Strengths (violent offences)", prisonId = "WLI"),
      NewOffering(course = "New Me Strengths (general offences)", prisonId = "AYI"),
      NewOffering(course = "New Me Strengths (general offences)", prisonId = "BWI"),
      NewOffering(course = "New Me Strengths (general offences)", prisonId = "BSI"),
      NewOffering(course = "New Me Strengths (general offences)", prisonId = "BNI"),
      NewOffering(course = "New Me Strengths (general offences)", prisonId = "CWI"),
      NewOffering(course = "New Me Strengths (general offences)", prisonId = "GHI"),
      NewOffering(course = "New Me Strengths (general offences)", prisonId = "GMI"),
      NewOffering(course = "New Me Strengths (general offences)", prisonId = "HOI"),
      NewOffering(course = "New Me Strengths (general offences)", prisonId = "HMI"),
      NewOffering(course = "New Me Strengths (general offences)", prisonId = "LGI"),
      NewOffering(course = "New Me Strengths (general offences)", prisonId = "PRI"),
      NewOffering(course = "New Me Strengths (general offences)", prisonId = "PBI"),
      NewOffering(course = "New Me Strengths (general offences)", prisonId = "RSI"),
      NewOffering(course = "New Me Strengths (general offences)", prisonId = "SHI"),
      NewOffering(course = "New Me Strengths (general offences)", prisonId = "WLI"),
      NewOffering(course = "New Me Strengths (sexual offences)", prisonId = "BNI"),
      NewOffering(course = "New Me Strengths (sexual offences)", prisonId = "BRI"),
      NewOffering(course = "New Me Strengths (sexual offences)", prisonId = "IWI"),
      NewOffering(course = "New Me Strengths (sexual offences)", prisonId = "NLI"),
      NewOffering(course = "New Me Strengths (sexual offences)", prisonId = "RHI"),
      NewOffering(course = "New Me Strengths (sexual offences)", prisonId = "WDI"),
      NewOffering(course = "New Me Strengths (sexual offences)", prisonId = "WTI"),
      NewOffering(course = "New Me Strengths (sexual offences)", prisonId = "WMI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "ACI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "AYI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "BAI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "BWI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "BMI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "BSI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "BCI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "BNI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "CWI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "DAI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "DTI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "DNI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "DGI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "DWI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "DHI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "EYI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "EEI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "FSI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "FMI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "FWI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "FBI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "FHI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "FKI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "GHI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "GMI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "HOI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "HPI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "HII"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "HHI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "HMI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "ISI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "LFI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "LWI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "LHI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "LPI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "LLI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "LNI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "LGI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "MRI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "MDI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "NHI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "NLI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "OWI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "ONI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "PRI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "PFI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "PBI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "PDI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "RNI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "RSI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "RCI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "SKI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "SHI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "STI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "SLI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "SNI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "MTI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "WLI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "WEI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "WRI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "WHI"),
      NewOffering(course = "Thinking Skills Programme", prisonId = "WMI"),
    ).map { it.copy(organisation = "", contactEmail = "${LoremIpsum.words(1..1)}@${LoremIpsum.words(1..1)}.com") }

  fun coursesCsvInputStream(): InputStream = ByteArrayInputStream(coursesCsvText.toByteArray())
  val coursesCsvText: String =
    newCourses
      .joinToString(
        prefix = "name,identifier,description,audience,alternateName,comments\n",
        separator = "\n",
        transform = { """"${it.name}","${it.identifier}","${it.description}","${it.audience}","${it.alternateName}",${LoremIpsum.words(1..20)}""" },
        postfix = "\n",
      )

  val prerequisitesCsvText: String by lazy {
    prerequisiteRecords
      .joinToString(
        prefix = "name,description,course,comments,,,,\n",
        separator = "\n",
        transform = { """"${it.name}","${it.description}","${it.course}","${it.comments}",,,,""" },
        postfix = "\n",
      )
  }

  val offeringsCsvText: String by lazy {
    offeringsRecords
      .joinToString(
        prefix = "course,organisation,contact email,prisonId\n",
        separator = "\n",
        transform = { """"${it.course}","${it.organisation}","${it.contactEmail}",${it.prisonId}""" },
        postfix = "\n",
      )
  }
}
