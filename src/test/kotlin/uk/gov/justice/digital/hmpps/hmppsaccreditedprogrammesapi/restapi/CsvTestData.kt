package uk.gov.justice.digital.hmpps.hmppsaccreditedprogrammesapi.restapi

import uk.gov.justice.digital.hmpps.hmppsaccreditedprogrammesapi.LoremIpsum
import uk.gov.justice.digital.hmpps.hmppsaccreditedprogrammesapi.api.model.CourseRecord
import uk.gov.justice.digital.hmpps.hmppsaccreditedprogrammesapi.api.model.PrerequisiteRecord
import java.io.ByteArrayInputStream
import java.io.InputStream

object CsvTestData {
  val courseRecords: List<CourseRecord> by lazy {
    listOf(
      CourseRecord(name = "Becoming New Me Plus", description = "Lorem ipsum dolor sit amet, Consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.", audience = "Sexual offence, Intimate partner violence, Non-intimate partner violence", acronym = "BNM+", comments = "General comment: Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. "),
      CourseRecord(name = "Building Better Relationships", description = "Lorem ipsum dolor sit amet, Consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. ", audience = "Intimate partner violence ", acronym = "BBR", comments = ""),
      CourseRecord(name = "Healthy Identity Intervention", description = "Lorem ipsum dolor sit amet, Consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.", audience = "Extremism offence", acronym = "HI", comments = ""),
      CourseRecord(name = "Healthy Sex Programme", description = "Lorem ipsum dolor sit amet, Consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.", audience = "Sexual offence", acronym = "HSP", comments = ""),
      CourseRecord(name = "Horizon", description = "Lorem ipsum dolor sit amet, Consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.", audience = "Sexual offence", acronym = "", comments = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat."),
      CourseRecord(name = "iHorizon", description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. ", audience = "Sexual offence", acronym = "", comments = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat."),
      CourseRecord(name = "Identity Matters", description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. ", audience = "Gang offence, Extremism offence", acronym = "IM", comments = ""),
      CourseRecord(name = "Kaizen", description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.", audience = "Violent offence", acronym = "", comments = ""),
      CourseRecord(name = "Kaizen", description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.", audience = "Intimate partner violence", acronym = "", comments = ""),
      CourseRecord(name = "Kaizen", description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.", audience = "Sexual offence", acronym = "", comments = ""),
      CourseRecord(name = "Living as New Me (custody)", description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.", audience = "Violent offence, Sexual offence, Intimate partner violence ", acronym = "LNM", comments = ""),
      CourseRecord(name = "Living as New Me (community)", description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.", audience = "Sexual offence", acronym = "LNM", comments = ""),
      CourseRecord(name = "Motivation and Engagement", description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.", audience = "Violent offence, Sexual offence, Intimate partner violence ", acronym = "M&E", comments = ""),
      CourseRecord(name = "New Me MOT", description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. ", audience = "Violent offence, Sexual offence, Intimate partner violence ", acronym = "NMM", comments = ""),
      CourseRecord(name = "New Me Strengths", description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.", audience = "Violent offence, Sexual offence, Intimate partner violence ", acronym = "NMS", comments = ""),
      CourseRecord(name = "Thinking Skills Programme", description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.", audience = "Violent offence, Intimate partner violence", acronym = "TSP", comments = ""),
    ).map { it.copy(description = LoremIpsum.words(1..10), comments = LoremIpsum.words(0..20)) }
  }
  val prerequisiteRecords: List<PrerequisiteRecord> by lazy {
    listOf(
      PrerequisiteRecord(name = "gender", course = "Becoming New Me Plus"),
      PrerequisiteRecord(name = "age", course = "Becoming New Me Plus"),
      PrerequisiteRecord(name = "risk score", course = "Becoming New Me Plus"),
      PrerequisiteRecord(name = "risk score", course = "Becoming New Me Plus"),
      PrerequisiteRecord(name = "risk score", course = "Becoming New Me Plus"),
      PrerequisiteRecord(name = "setting", course = "Becoming New Me Plus"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Becoming New Me Plus"),
      PrerequisiteRecord(name = "", course = "Becoming New Me Plus"),
      PrerequisiteRecord(name = "need requirements", course = "Becoming New Me Plus"),
      PrerequisiteRecord(name = "criminogenic needs", course = "Becoming New Me Plus"),
      PrerequisiteRecord(name = "criminogenic needs", course = "Becoming New Me Plus"),
      PrerequisiteRecord(name = "gender", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "age", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "risk score", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "risk score", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "setting", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "criminogenic needs", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "criminogenic needs", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "criminogenic needs", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "criminogenic needs", course = "Building Better Relationships (Custody)"),
      PrerequisiteRecord(name = "gender", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "age", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "risk score", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "risk score", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "setting", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "need requirements", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "criminogenic needs", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "criminogenic needs", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "criminogenic needs", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "criminogenic needs", course = "Building Better Relationships (Community)"),
      PrerequisiteRecord(name = "gender", course = "Healthy Identity Intervention (Custody)"),
      PrerequisiteRecord(name = "gender", course = "Healthy Identity Intervention (Custody)"),
      PrerequisiteRecord(name = "age", course = "Healthy Identity Intervention (Custody)"),
      PrerequisiteRecord(name = "risk score", course = "Healthy Identity Intervention (Custody)"),
      PrerequisiteRecord(name = "setting", course = "Healthy Identity Intervention (Custody)"),
      PrerequisiteRecord(name = "setting", course = "Healthy Identity Intervention (Custody)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Healthy Identity Intervention (Custody)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Healthy Identity Intervention (Custody)"),
      PrerequisiteRecord(name = "need requirements", course = "Healthy Identity Intervention (Custody)"),
      PrerequisiteRecord(name = "need requirements", course = "Healthy Identity Intervention (Custody)"),
      PrerequisiteRecord(name = "need requirements", course = "Healthy Identity Intervention (Custody)"),
      PrerequisiteRecord(name = "gender", course = "Healthy Identity Intervention (Community)"),
      PrerequisiteRecord(name = "gender", course = "Healthy Identity Intervention (Community)"),
      PrerequisiteRecord(name = "age", course = "Healthy Identity Intervention (Community)"),
      PrerequisiteRecord(name = "risk score", course = "Healthy Identity Intervention (Community)"),
      PrerequisiteRecord(name = "setting", course = "Healthy Identity Intervention (Community)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Healthy Identity Intervention (Community)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Healthy Identity Intervention (Community)"),
      PrerequisiteRecord(name = "need requirements", course = "Healthy Identity Intervention (Community)"),
      PrerequisiteRecord(name = "need requirements", course = "Healthy Identity Intervention (Community)"),
      PrerequisiteRecord(name = "need requirements", course = "Healthy Identity Intervention (Community)"),
      PrerequisiteRecord(name = "gender", course = "Healthy Sex Programme"),
      PrerequisiteRecord(name = "age", course = "Healthy Sex Programme"),
      PrerequisiteRecord(name = "risk score", course = "Healthy Sex Programme"),
      PrerequisiteRecord(name = "setting", course = "Healthy Sex Programme"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Healthy Sex Programme"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Healthy Sex Programme"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Healthy Sex Programme"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Healthy Sex Programme"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Healthy Sex Programme"),
      PrerequisiteRecord(name = "need requirements", course = "Healthy Sex Programme"),
      PrerequisiteRecord(name = "need requirements", course = "Healthy Sex Programme"),
      PrerequisiteRecord(name = "criminogenic needs", course = "Healthy Sex Programme"),
      PrerequisiteRecord(name = "gender", course = "Horizon (Custody)"),
      PrerequisiteRecord(name = "age", course = "Horizon (Custody)"),
      PrerequisiteRecord(name = "risk score", course = "Horizon (Custody)"),
      PrerequisiteRecord(name = "setting", course = "Horizon (Custody)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Horizon (Custody)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Horizon (Custody)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Horizon (Custody)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Horizon (Custody)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Horizon (Custody)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Horizon (Custody)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Horizon (Custody)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Horizon (Custody)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Horizon (Custody)"),
      PrerequisiteRecord(name = "need requirements", course = "Horizon (Custody)"),
      PrerequisiteRecord(name = "need requirements", course = "Horizon (Custody)"),
      PrerequisiteRecord(name = "need requirements", course = "Horizon (Custody)"),
      PrerequisiteRecord(name = "gender", course = "Horizon (Community)"),
      PrerequisiteRecord(name = "age", course = "Horizon (Community)"),
      PrerequisiteRecord(name = "risk score", course = "Horizon (Community)"),
      PrerequisiteRecord(name = "setting", course = "Horizon (Community)"),
      PrerequisiteRecord(name = "setting", course = "Horizon (Community)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Horizon (Community)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Horizon (Community)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Horizon (Community)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Horizon (Community)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Horizon (Community)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Horizon (Community)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Horizon (Community)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Horizon (Community)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Horizon (Community)"),
      PrerequisiteRecord(name = "need requirements", course = "Horizon (Community)"),
      PrerequisiteRecord(name = "need requirements", course = "Horizon (Community)"),
      PrerequisiteRecord(name = "need requirements", course = "Horizon (Community)"),
      PrerequisiteRecord(name = "criminogenic needs", course = "Horizon"),
      PrerequisiteRecord(name = "gender", course = "iHorizon"),
      PrerequisiteRecord(name = "age", course = "iHorizon"),
      PrerequisiteRecord(name = "risk score", course = "iHorizon"),
      PrerequisiteRecord(name = "setting", course = "iHorizon"),
      PrerequisiteRecord(name = "responsivity requirements", course = "iHorizon"),
      PrerequisiteRecord(name = "responsivity requirements", course = "iHorizon"),
      PrerequisiteRecord(name = "responsivity requirements", course = "iHorizon"),
      PrerequisiteRecord(name = "responsivity requirements", course = "iHorizon"),
      PrerequisiteRecord(name = "responsivity requirements", course = "iHorizon"),
      PrerequisiteRecord(name = "responsivity requirements", course = "iHorizon"),
      PrerequisiteRecord(name = "responsivity requirements", course = "iHorizon"),
      PrerequisiteRecord(name = "responsivity requirements", course = "iHorizon"),
      PrerequisiteRecord(name = "responsivity requirements", course = "iHorizon"),
      PrerequisiteRecord(name = "need requirements", course = "iHorizon"),
      PrerequisiteRecord(name = "need requirements", course = "iHorizon"),
      PrerequisiteRecord(name = "criminogenic needs", course = "iHorizon"),
      PrerequisiteRecord(name = "gender", course = "Identity Matters"),
      PrerequisiteRecord(name = "age", course = "Identity Matters"),
      PrerequisiteRecord(name = "risk score", course = "Identity Matters"),
      PrerequisiteRecord(name = "risk score", course = "Identity Matters"),
      PrerequisiteRecord(name = "setting", course = "Identity Matters"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Identity Matters"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Identity Matters"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Identity Matters"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Identity Matters"),
      PrerequisiteRecord(name = "criminogenic needs", course = "Identity Matters"),
      PrerequisiteRecord(name = "gender", course = "Kaizen (sexual offence)"),
      PrerequisiteRecord(name = "age", course = "Kaizen (sexual offence)"),
      PrerequisiteRecord(name = "risk score", course = "Kaizen (sexual offence)"),
      PrerequisiteRecord(name = "setting", course = "Kaizen (sexual offence)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Kaizen (sexual offence)"),
      PrerequisiteRecord(name = "need requirements", course = "Kaizen (sexual offence)"),
      PrerequisiteRecord(name = "criminogenic needs", course = "Kaizen (sexual offence)"),
      PrerequisiteRecord(name = "gender", course = "Kaizen (violent offence)"),
      PrerequisiteRecord(name = "age", course = "Kaizen (violent offence)"),
      PrerequisiteRecord(name = "risk score", course = "Kaizen (violent offence)"),
      PrerequisiteRecord(name = "setting", course = "Kaizen (violent offence)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Kaizen (violent offence)"),
      PrerequisiteRecord(name = "need requirements", course = "Kaizen (violent offence)"),
      PrerequisiteRecord(name = "criminogenic needs", course = "Kaizen (violent offence)"),
      PrerequisiteRecord(name = "gender", course = "Kaizen (intimate partner violence offence)"),
      PrerequisiteRecord(name = "age", course = "Kaizen (intimate partner violence offence)"),
      PrerequisiteRecord(name = "risk score", course = "Kaizen (intimate partner violence offence)"),
      PrerequisiteRecord(name = "setting", course = "Kaizen (intimate partner violence offence)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Kaizen (intimate partner violence offence)"),
      PrerequisiteRecord(name = "need requirements", course = "Kaizen (intimate partner violence offence)"),
      PrerequisiteRecord(name = "criminogenic needs", course = "Kaizen (intimate partner violence offence)"),
      PrerequisiteRecord(name = "gender", course = "Living as New Me"),
      PrerequisiteRecord(name = "age", course = "Living as New Me"),
      PrerequisiteRecord(name = "risk score", course = "Living as New Me"),
      PrerequisiteRecord(name = "setting", course = "Living as New Me"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Living as New Me"),
      PrerequisiteRecord(name = "need requirements", course = "Living as New Me"),
      PrerequisiteRecord(name = "criminogenic needs", course = "Living as New Me"),
      PrerequisiteRecord(name = "gender", course = "Living as New Me (Sexual offences)"),
      PrerequisiteRecord(name = "age", course = "Living as New Me (Sexual offences)"),
      PrerequisiteRecord(name = "risk score", course = "Living as New Me (Sexual offences)"),
      PrerequisiteRecord(name = "setting", course = "Living as New Me (Sexual offences)"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Living as New Me (Sexual offences)"),
      PrerequisiteRecord(name = "need requirements", course = "Living as New Me (Sexual offences)"),
      PrerequisiteRecord(name = "criminogenic needs", course = "Living as New Me (Sexual offences)"),
      PrerequisiteRecord(name = "gender", course = "Motivation and Engagement"),
      PrerequisiteRecord(name = "gender", course = "Motivation and Engagement"),
      PrerequisiteRecord(name = "age", course = "Motivation and Engagement"),
      PrerequisiteRecord(name = "risk score", course = "Motivation and Engagement"),
      PrerequisiteRecord(name = "setting", course = "Motivation and Engagement"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Motivation and Engagement"),
      PrerequisiteRecord(name = "need requirements", course = "Motivation and Engagement"),
      PrerequisiteRecord(name = "criminogenic needs", course = "Motivation and Engagement"),
      PrerequisiteRecord(name = "gender", course = "New Me MOT"),
      PrerequisiteRecord(name = "age", course = "New Me MOT"),
      PrerequisiteRecord(name = "risk score", course = "New Me MOT"),
      PrerequisiteRecord(name = "setting", course = "New Me MOT"),
      PrerequisiteRecord(name = "responsivity requirements", course = "New Me MOT"),
      PrerequisiteRecord(name = "need requirements", course = "New Me MOT"),
      PrerequisiteRecord(name = "criminogenic needs", course = "New Me MOT"),
      PrerequisiteRecord(name = "gender", course = "New Me Strengths"),
      PrerequisiteRecord(name = "age", course = "New Me Strengths"),
      PrerequisiteRecord(name = "risk score", course = "New Me Strengths"),
      PrerequisiteRecord(name = "setting", course = "New Me Strengths"),
      PrerequisiteRecord(name = "responsivity requirements", course = "New Me Strengths"),
      PrerequisiteRecord(name = "need requirements", course = "New Me Strengths"),
      PrerequisiteRecord(name = "criminogenic needs", course = "New Me Strengths"),
      PrerequisiteRecord(name = "gender", course = "Thinking Skills Programme"),
      PrerequisiteRecord(name = "gender", course = "Thinking Skills Programme"),
      PrerequisiteRecord(name = "age", course = "Thinking Skills Programme"),
      PrerequisiteRecord(name = "risk score", course = "Thinking Skills Programme"),
      PrerequisiteRecord(name = "setting", course = "Thinking Skills Programme"),
      PrerequisiteRecord(name = "setting", course = "Thinking Skills Programme"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Thinking Skills Programme"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Thinking Skills Programme"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Thinking Skills Programme"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Thinking Skills Programme"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Thinking Skills Programme"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Thinking Skills Programme"),
      PrerequisiteRecord(name = "responsivity requirements", course = "Thinking Skills Programme"),
      PrerequisiteRecord(name = "need requirements", course = "Thinking Skills Programme"),
      PrerequisiteRecord(name = "need requirements", course = "Thinking Skills Programme"),
      PrerequisiteRecord(name = "need requirements", course = "Thinking Skills Programme"),
      PrerequisiteRecord(name = "need requirements", course = "Thinking Skills Programme"),
      PrerequisiteRecord(name = "need requirements", course = "Thinking Skills Programme"),
      PrerequisiteRecord(name = "need requirements", course = "Thinking Skills Programme"),
      PrerequisiteRecord(name = "need requirements", course = "Thinking Skills Programme"),
      PrerequisiteRecord(name = "need requirements", course = "Thinking Skills Programme"),
      PrerequisiteRecord(name = "criminogenic needs", course = "Thinking Skills Programme"),
    ).map { it.copy(description = LoremIpsum.words(1..5), comments = LoremIpsum.words(0..20)) }
  }

  fun coursesCsvInputStream(): InputStream = ByteArrayInputStream(coursesCsvText.toByteArray())
  val coursesCsvText: String by lazy {
    courseRecords
      .joinToString(
        prefix = "name,description,audience,acronym,comments\n",
        separator = "\n",
        transform = { """"${it.name}","${it.description}","${it.audience}","${it.acronym}",${it.comments}""" },
        postfix = "\n",
      )
  }

  val prerequisitesCsvText: String by lazy {
    prerequisiteRecords
      .joinToString(
        prefix = "name,description,course,comments,,,,\n",
        separator = "\n",
        transform = { """"${it.name}","${it.description}","${it.course}","${it.comments}",,,,""" },
        postfix = "\n",
      )
  }
}
